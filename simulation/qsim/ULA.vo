// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 20.1.1 Build 720 11/11/2020 SJ Lite Edition"

<<<<<<< HEAD
// DATE "07/22/2021 12:15:59"
=======
// DATE "07/21/2021 21:23:32"
>>>>>>> 61c76b4bc868c347221f6b15a9d30183ae1b7918

// 
// Device: Altera EP4CE6E22C6 Package TQFP144
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

<<<<<<< HEAD
module somador_completo (
	S,
	E1,
	E2,
	saida_antes);
output 	[5:0] S;
input 	[4:0] E1;
input 	[4:0] E2;
output 	[5:0] saida_antes;
=======
module Mux8_1_vetor (
	Saida,
	S2,
	S1,
	S0,
	\AnD ,
	Comp_2,
	Soma,
	Sub,
	\XoR );
output 	[5:0] Saida;
input 	S2;
input 	S1;
input 	S0;
input 	[4:0] \AnD ;
input 	[4:0] Comp_2;
input 	[5:0] Soma;
input 	[5:0] Sub;
input 	[4:0] \XoR ;
>>>>>>> 61c76b4bc868c347221f6b15a9d30183ae1b7918

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
<<<<<<< HEAD
wire \S[5]~output_o ;
wire \S[4]~output_o ;
wire \S[3]~output_o ;
wire \S[2]~output_o ;
wire \S[1]~output_o ;
wire \S[0]~output_o ;
wire \saida_antes[5]~output_o ;
wire \saida_antes[4]~output_o ;
wire \saida_antes[3]~output_o ;
wire \saida_antes[2]~output_o ;
wire \saida_antes[1]~output_o ;
wire \saida_antes[0]~output_o ;
wire \E1[4]~input_o ;
wire \E2[4]~input_o ;
wire \E2[3]~input_o ;
wire \E1[3]~input_o ;
wire \E2[1]~input_o ;
wire \E2[0]~input_o ;
wire \E1[0]~input_o ;
wire \E1[1]~input_o ;
wire \inst|menor_que_magnitude|inst1|inst2~0_combout ;
wire \E2[2]~input_o ;
wire \E1[2]~input_o ;
wire \inst|inst|or_mux~0_combout ;
wire \inst|inst|or_mux~1_combout ;
wire \inst|inst|or_mux~2_combout ;
wire \somador|inst7|inst~combout ;
wire \somador_ch|inst|mux2x1_2|or_mux~0_combout ;
wire \somador_ch|inst5|mux2x1_2|and_mux_1~combout ;
wire \somador_ch|inst5|mux2x1_2|and_mux_2~combout ;
wire \somador|inst6|inst3~combout ;
wire \somador|inst6|inst4~0_combout ;
wire \somador_ch|inst|mux2x1_3|or_mux~0_combout ;
wire \somador_ch|inst5|mux2x1_3|and_mux_1~combout ;
wire \somador_ch|inst5|mux2x1_3|and_mux_2~combout ;
wire \somador|inst5|inst3~0_combout ;
wire \descomplementar|comp_5bits|inst|inst5|inst1~combout ;
wire \somador|inst5|inst4~0_combout ;
wire \somador_ch|comp_2_1|inst|inst|inst3~combout ;
wire \somador_ch|inst|mux2x1_4|or_mux~0_combout ;
wire \somador_ch|comp_2_2|inst|inst|inst3~combout ;
wire \somador_ch|inst5|mux2x1_4|and_mux_1~combout ;
wire \somador_ch|inst5|mux2x1_4|and_mux_2~combout ;
wire \somador|inst|inst3~combout ;
wire \somador|inst|inst4~0_combout ;
wire \descomplementar|comp_2_seletor_5bits|mux2x1_5|or_mux~0_combout ;
wire \descomplementar|comp_2_seletor_5bits|mux2x1_4|or_mux~0_combout ;
wire \somador|inst7|inst2~combout ;
wire \descomplementar|comp_2_seletor_5bits|mux2x1_3|or_mux~0_combout ;
wire \descomplementar|comp_2_seletor_5bits|mux2x1_2|or_mux~2_combout ;


cycloneive_io_obuf \S[5]~output (
	.i(\inst|inst|or_mux~2_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\S[5]~output_o ),
	.obar());
// synopsys translate_off
defparam \S[5]~output .bus_hold = "false";
defparam \S[5]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \S[4]~output (
	.i(\descomplementar|comp_2_seletor_5bits|mux2x1_5|or_mux~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\S[4]~output_o ),
	.obar());
// synopsys translate_off
defparam \S[4]~output .bus_hold = "false";
defparam \S[4]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \S[3]~output (
	.i(\descomplementar|comp_2_seletor_5bits|mux2x1_4|or_mux~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\S[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \S[3]~output .bus_hold = "false";
defparam \S[3]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \S[2]~output (
	.i(\descomplementar|comp_2_seletor_5bits|mux2x1_3|or_mux~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\S[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \S[2]~output .bus_hold = "false";
defparam \S[2]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \S[1]~output (
	.i(\descomplementar|comp_2_seletor_5bits|mux2x1_2|or_mux~2_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\S[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \S[1]~output .bus_hold = "false";
defparam \S[1]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \S[0]~output (
	.i(\somador|inst7|inst2~combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\S[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \S[0]~output .bus_hold = "false";
defparam \S[0]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \saida_antes[5]~output (
	.i(\inst|inst|or_mux~2_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\saida_antes[5]~output_o ),
	.obar());
// synopsys translate_off
defparam \saida_antes[5]~output .bus_hold = "false";
defparam \saida_antes[5]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \saida_antes[4]~output (
	.i(\somador|inst|inst4~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\saida_antes[4]~output_o ),
	.obar());
// synopsys translate_off
defparam \saida_antes[4]~output .bus_hold = "false";
defparam \saida_antes[4]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \saida_antes[3]~output (
	.i(\somador|inst|inst3~combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\saida_antes[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \saida_antes[3]~output .bus_hold = "false";
defparam \saida_antes[3]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \saida_antes[2]~output (
	.i(\somador|inst5|inst3~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\saida_antes[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \saida_antes[2]~output .bus_hold = "false";
defparam \saida_antes[2]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \saida_antes[1]~output (
	.i(\somador|inst6|inst3~combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\saida_antes[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \saida_antes[1]~output .bus_hold = "false";
defparam \saida_antes[1]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \saida_antes[0]~output (
	.i(\somador|inst7|inst2~combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\saida_antes[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \saida_antes[0]~output .bus_hold = "false";
defparam \saida_antes[0]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_ibuf \E1[4]~input (
	.i(E1[4]),
	.ibar(gnd),
	.o(\E1[4]~input_o ));
// synopsys translate_off
defparam \E1[4]~input .bus_hold = "false";
defparam \E1[4]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \E2[4]~input (
	.i(E2[4]),
	.ibar(gnd),
	.o(\E2[4]~input_o ));
// synopsys translate_off
defparam \E2[4]~input .bus_hold = "false";
defparam \E2[4]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \E2[3]~input (
	.i(E2[3]),
	.ibar(gnd),
	.o(\E2[3]~input_o ));
// synopsys translate_off
defparam \E2[3]~input .bus_hold = "false";
defparam \E2[3]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \E1[3]~input (
	.i(E1[3]),
	.ibar(gnd),
	.o(\E1[3]~input_o ));
// synopsys translate_off
defparam \E1[3]~input .bus_hold = "false";
defparam \E1[3]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \E2[1]~input (
	.i(E2[1]),
	.ibar(gnd),
	.o(\E2[1]~input_o ));
// synopsys translate_off
defparam \E2[1]~input .bus_hold = "false";
defparam \E2[1]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \E2[0]~input (
	.i(E2[0]),
	.ibar(gnd),
	.o(\E2[0]~input_o ));
// synopsys translate_off
defparam \E2[0]~input .bus_hold = "false";
defparam \E2[0]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \E1[0]~input (
	.i(E1[0]),
	.ibar(gnd),
	.o(\E1[0]~input_o ));
// synopsys translate_off
defparam \E1[0]~input .bus_hold = "false";
defparam \E1[0]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \E1[1]~input (
	.i(E1[1]),
	.ibar(gnd),
	.o(\E1[1]~input_o ));
// synopsys translate_off
defparam \E1[1]~input .bus_hold = "false";
defparam \E1[1]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \inst|menor_que_magnitude|inst1|inst2~0 (
// Equation(s):
// \inst|menor_que_magnitude|inst1|inst2~0_combout  = (\E2[1]~input_o  & (((\E2[0]~input_o  & !\E1[0]~input_o )) # (!\E1[1]~input_o ))) # (!\E2[1]~input_o  & (\E2[0]~input_o  & (!\E1[0]~input_o  & !\E1[1]~input_o )))

	.dataa(\E2[1]~input_o ),
	.datab(\E2[0]~input_o ),
	.datac(\E1[0]~input_o ),
	.datad(\E1[1]~input_o ),
	.cin(gnd),
	.combout(\inst|menor_que_magnitude|inst1|inst2~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst|menor_que_magnitude|inst1|inst2~0 .lut_mask = 16'h08AE;
defparam \inst|menor_que_magnitude|inst1|inst2~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_io_ibuf \E2[2]~input (
	.i(E2[2]),
	.ibar(gnd),
	.o(\E2[2]~input_o ));
// synopsys translate_off
defparam \E2[2]~input .bus_hold = "false";
defparam \E2[2]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \E1[2]~input (
	.i(E1[2]),
	.ibar(gnd),
	.o(\E1[2]~input_o ));
// synopsys translate_off
defparam \E1[2]~input .bus_hold = "false";
defparam \E1[2]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \inst|inst|or_mux~0 (
// Equation(s):
// \inst|inst|or_mux~0_combout  = (\inst|menor_que_magnitude|inst1|inst2~0_combout  & ((\E2[2]~input_o ) # (!\E1[2]~input_o ))) # (!\inst|menor_que_magnitude|inst1|inst2~0_combout  & (\E2[2]~input_o  & !\E1[2]~input_o ))

	.dataa(\inst|menor_que_magnitude|inst1|inst2~0_combout ),
	.datab(\E2[2]~input_o ),
	.datac(\E1[2]~input_o ),
	.datad(gnd),
	.cin(gnd),
	.combout(\inst|inst|or_mux~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst|inst|or_mux~0 .lut_mask = 16'h8E8E;
defparam \inst|inst|or_mux~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \inst|inst|or_mux~1 (
// Equation(s):
// \inst|inst|or_mux~1_combout  = (\E2[3]~input_o  & ((\inst|inst|or_mux~0_combout ) # (!\E1[3]~input_o ))) # (!\E2[3]~input_o  & (!\E1[3]~input_o  & \inst|inst|or_mux~0_combout ))

	.dataa(\E2[3]~input_o ),
	.datab(\E1[3]~input_o ),
	.datac(\inst|inst|or_mux~0_combout ),
	.datad(gnd),
	.cin(gnd),
	.combout(\inst|inst|or_mux~1_combout ),
	.cout());
// synopsys translate_off
defparam \inst|inst|or_mux~1 .lut_mask = 16'hB2B2;
defparam \inst|inst|or_mux~1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \inst|inst|or_mux~2 (
// Equation(s):
// \inst|inst|or_mux~2_combout  = (\inst|inst|or_mux~1_combout  & (\E1[4]~input_o )) # (!\inst|inst|or_mux~1_combout  & ((\E2[4]~input_o )))

	.dataa(\E1[4]~input_o ),
	.datab(\E2[4]~input_o ),
	.datac(\inst|inst|or_mux~1_combout ),
	.datad(gnd),
	.cin(gnd),
	.combout(\inst|inst|or_mux~2_combout ),
	.cout());
// synopsys translate_off
defparam \inst|inst|or_mux~2 .lut_mask = 16'hACAC;
defparam \inst|inst|or_mux~2 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \somador|inst7|inst (
// Equation(s):
// \somador|inst7|inst~combout  = (\E1[0]~input_o  & \E2[0]~input_o )

	.dataa(\E1[0]~input_o ),
	.datab(\E2[0]~input_o ),
	.datac(gnd),
	.datad(gnd),
	.cin(gnd),
	.combout(\somador|inst7|inst~combout ),
	.cout());
// synopsys translate_off
defparam \somador|inst7|inst .lut_mask = 16'h8888;
defparam \somador|inst7|inst .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \somador_ch|inst|mux2x1_2|or_mux~0 (
// Equation(s):
// \somador_ch|inst|mux2x1_2|or_mux~0_combout  = \E1[1]~input_o  $ (((\E1[4]~input_o  & \E1[0]~input_o )))

	.dataa(gnd),
	.datab(\E1[1]~input_o ),
	.datac(\E1[4]~input_o ),
	.datad(\E1[0]~input_o ),
	.cin(gnd),
	.combout(\somador_ch|inst|mux2x1_2|or_mux~0_combout ),
	.cout());
// synopsys translate_off
defparam \somador_ch|inst|mux2x1_2|or_mux~0 .lut_mask = 16'h3CCC;
defparam \somador_ch|inst|mux2x1_2|or_mux~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \somador_ch|inst5|mux2x1_2|and_mux_1 (
// Equation(s):
// \somador_ch|inst5|mux2x1_2|and_mux_1~combout  = (\E2[4]~input_o  & (\E2[1]~input_o  $ (\E2[0]~input_o )))

	.dataa(\E2[4]~input_o ),
	.datab(gnd),
	.datac(\E2[1]~input_o ),
	.datad(\E2[0]~input_o ),
	.cin(gnd),
	.combout(\somador_ch|inst5|mux2x1_2|and_mux_1~combout ),
	.cout());
// synopsys translate_off
defparam \somador_ch|inst5|mux2x1_2|and_mux_1 .lut_mask = 16'h0AA0;
defparam \somador_ch|inst5|mux2x1_2|and_mux_1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \somador_ch|inst5|mux2x1_2|and_mux_2 (
// Equation(s):
// \somador_ch|inst5|mux2x1_2|and_mux_2~combout  = (\E2[1]~input_o  & !\E2[4]~input_o )

	.dataa(\E2[1]~input_o ),
	.datab(gnd),
	.datac(gnd),
	.datad(\E2[4]~input_o ),
	.cin(gnd),
	.combout(\somador_ch|inst5|mux2x1_2|and_mux_2~combout ),
	.cout());
// synopsys translate_off
defparam \somador_ch|inst5|mux2x1_2|and_mux_2 .lut_mask = 16'h00AA;
defparam \somador_ch|inst5|mux2x1_2|and_mux_2 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \somador|inst6|inst3 (
// Equation(s):
// \somador|inst6|inst3~combout  = \somador|inst7|inst~combout  $ (\somador_ch|inst|mux2x1_2|or_mux~0_combout  $ (((\somador_ch|inst5|mux2x1_2|and_mux_1~combout ) # (\somador_ch|inst5|mux2x1_2|and_mux_2~combout ))))

	.dataa(\somador|inst7|inst~combout ),
	.datab(\somador_ch|inst|mux2x1_2|or_mux~0_combout ),
	.datac(\somador_ch|inst5|mux2x1_2|and_mux_1~combout ),
	.datad(\somador_ch|inst5|mux2x1_2|and_mux_2~combout ),
	.cin(gnd),
	.combout(\somador|inst6|inst3~combout ),
	.cout());
// synopsys translate_off
defparam \somador|inst6|inst3 .lut_mask = 16'h9996;
defparam \somador|inst6|inst3 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \somador|inst6|inst4~0 (
// Equation(s):
// \somador|inst6|inst4~0_combout  = (\somador|inst7|inst~combout  & ((\somador_ch|inst5|mux2x1_2|and_mux_1~combout ) # ((\somador_ch|inst5|mux2x1_2|and_mux_2~combout ) # (\somador_ch|inst|mux2x1_2|or_mux~0_combout )))) # (!\somador|inst7|inst~combout  & 
// (\somador_ch|inst|mux2x1_2|or_mux~0_combout  & ((\somador_ch|inst5|mux2x1_2|and_mux_1~combout ) # (\somador_ch|inst5|mux2x1_2|and_mux_2~combout ))))

	.dataa(\somador_ch|inst5|mux2x1_2|and_mux_1~combout ),
	.datab(\somador_ch|inst5|mux2x1_2|and_mux_2~combout ),
	.datac(\somador|inst7|inst~combout ),
	.datad(\somador_ch|inst|mux2x1_2|or_mux~0_combout ),
	.cin(gnd),
	.combout(\somador|inst6|inst4~0_combout ),
	.cout());
// synopsys translate_off
defparam \somador|inst6|inst4~0 .lut_mask = 16'hFEE0;
defparam \somador|inst6|inst4~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \somador_ch|inst|mux2x1_3|or_mux~0 (
// Equation(s):
// \somador_ch|inst|mux2x1_3|or_mux~0_combout  = \E1[2]~input_o  $ (((\E1[4]~input_o  & ((\E1[1]~input_o ) # (\E1[0]~input_o )))))

	.dataa(\E1[1]~input_o ),
	.datab(\E1[0]~input_o ),
	.datac(\E1[2]~input_o ),
	.datad(\E1[4]~input_o ),
	.cin(gnd),
	.combout(\somador_ch|inst|mux2x1_3|or_mux~0_combout ),
	.cout());
// synopsys translate_off
defparam \somador_ch|inst|mux2x1_3|or_mux~0 .lut_mask = 16'h1EF0;
defparam \somador_ch|inst|mux2x1_3|or_mux~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \somador_ch|inst5|mux2x1_3|and_mux_1 (
// Equation(s):
// \somador_ch|inst5|mux2x1_3|and_mux_1~combout  = (\E2[4]~input_o  & (\E2[2]~input_o  $ (((\E2[1]~input_o ) # (\E2[0]~input_o )))))

	.dataa(\E2[4]~input_o ),
	.datab(\E2[1]~input_o ),
	.datac(\E2[0]~input_o ),
	.datad(\E2[2]~input_o ),
	.cin(gnd),
	.combout(\somador_ch|inst5|mux2x1_3|and_mux_1~combout ),
	.cout());
// synopsys translate_off
defparam \somador_ch|inst5|mux2x1_3|and_mux_1 .lut_mask = 16'h02A8;
defparam \somador_ch|inst5|mux2x1_3|and_mux_1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \somador_ch|inst5|mux2x1_3|and_mux_2 (
// Equation(s):
// \somador_ch|inst5|mux2x1_3|and_mux_2~combout  = (\E2[2]~input_o  & !\E2[4]~input_o )

	.dataa(\E2[2]~input_o ),
	.datab(gnd),
	.datac(gnd),
	.datad(\E2[4]~input_o ),
	.cin(gnd),
	.combout(\somador_ch|inst5|mux2x1_3|and_mux_2~combout ),
	.cout());
// synopsys translate_off
defparam \somador_ch|inst5|mux2x1_3|and_mux_2 .lut_mask = 16'h00AA;
defparam \somador_ch|inst5|mux2x1_3|and_mux_2 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \somador|inst5|inst3~0 (
// Equation(s):
// \somador|inst5|inst3~0_combout  = \somador|inst6|inst4~0_combout  $ (\somador_ch|inst|mux2x1_3|or_mux~0_combout  $ (((\somador_ch|inst5|mux2x1_3|and_mux_1~combout ) # (\somador_ch|inst5|mux2x1_3|and_mux_2~combout ))))

	.dataa(\somador|inst6|inst4~0_combout ),
	.datab(\somador_ch|inst|mux2x1_3|or_mux~0_combout ),
	.datac(\somador_ch|inst5|mux2x1_3|and_mux_1~combout ),
	.datad(\somador_ch|inst5|mux2x1_3|and_mux_2~combout ),
	.cin(gnd),
	.combout(\somador|inst5|inst3~0_combout ),
	.cout());
// synopsys translate_off
defparam \somador|inst5|inst3~0 .lut_mask = 16'h9996;
defparam \somador|inst5|inst3~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \descomplementar|comp_5bits|inst|inst5|inst1 (
// Equation(s):
// \descomplementar|comp_5bits|inst|inst5|inst1~combout  = (\somador|inst6|inst3~combout ) # ((\somador|inst5|inst3~0_combout ) # (\E1[0]~input_o  $ (\E2[0]~input_o )))

	.dataa(\somador|inst6|inst3~combout ),
	.datab(\somador|inst5|inst3~0_combout ),
	.datac(\E1[0]~input_o ),
	.datad(\E2[0]~input_o ),
	.cin(gnd),
	.combout(\descomplementar|comp_5bits|inst|inst5|inst1~combout ),
	.cout());
// synopsys translate_off
defparam \descomplementar|comp_5bits|inst|inst5|inst1 .lut_mask = 16'hEFFE;
defparam \descomplementar|comp_5bits|inst|inst5|inst1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \somador|inst5|inst4~0 (
// Equation(s):
// \somador|inst5|inst4~0_combout  = (\somador|inst6|inst4~0_combout  & ((\somador_ch|inst5|mux2x1_3|and_mux_1~combout ) # ((\somador_ch|inst5|mux2x1_3|and_mux_2~combout ) # (\somador_ch|inst|mux2x1_3|or_mux~0_combout )))) # (!\somador|inst6|inst4~0_combout  
// & (\somador_ch|inst|mux2x1_3|or_mux~0_combout  & ((\somador_ch|inst5|mux2x1_3|and_mux_1~combout ) # (\somador_ch|inst5|mux2x1_3|and_mux_2~combout ))))

	.dataa(\somador_ch|inst5|mux2x1_3|and_mux_1~combout ),
	.datab(\somador_ch|inst5|mux2x1_3|and_mux_2~combout ),
	.datac(\somador|inst6|inst4~0_combout ),
	.datad(\somador_ch|inst|mux2x1_3|or_mux~0_combout ),
	.cin(gnd),
	.combout(\somador|inst5|inst4~0_combout ),
	.cout());
// synopsys translate_off
defparam \somador|inst5|inst4~0 .lut_mask = 16'hFEE0;
defparam \somador|inst5|inst4~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \somador_ch|comp_2_1|inst|inst|inst3 (
// Equation(s):
// \somador_ch|comp_2_1|inst|inst|inst3~combout  = \E1[3]~input_o  $ (((\E1[1]~input_o ) # ((\E1[0]~input_o ) # (\E1[2]~input_o ))))

	.dataa(\E1[1]~input_o ),
	.datab(\E1[0]~input_o ),
	.datac(\E1[2]~input_o ),
	.datad(\E1[3]~input_o ),
	.cin(gnd),
	.combout(\somador_ch|comp_2_1|inst|inst|inst3~combout ),
	.cout());
// synopsys translate_off
defparam \somador_ch|comp_2_1|inst|inst|inst3 .lut_mask = 16'h01FE;
defparam \somador_ch|comp_2_1|inst|inst|inst3 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \somador_ch|inst|mux2x1_4|or_mux~0 (
// Equation(s):
// \somador_ch|inst|mux2x1_4|or_mux~0_combout  = (\E1[4]~input_o  & (\somador_ch|comp_2_1|inst|inst|inst3~combout )) # (!\E1[4]~input_o  & ((\E1[3]~input_o )))

	.dataa(\somador_ch|comp_2_1|inst|inst|inst3~combout ),
	.datab(\E1[3]~input_o ),
	.datac(gnd),
	.datad(\E1[4]~input_o ),
	.cin(gnd),
	.combout(\somador_ch|inst|mux2x1_4|or_mux~0_combout ),
	.cout());
// synopsys translate_off
defparam \somador_ch|inst|mux2x1_4|or_mux~0 .lut_mask = 16'hAACC;
defparam \somador_ch|inst|mux2x1_4|or_mux~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \somador_ch|comp_2_2|inst|inst|inst3 (
// Equation(s):
// \somador_ch|comp_2_2|inst|inst|inst3~combout  = \E2[3]~input_o  $ (((\E2[1]~input_o ) # ((\E2[0]~input_o ) # (\E2[2]~input_o ))))

	.dataa(\E2[1]~input_o ),
	.datab(\E2[0]~input_o ),
	.datac(\E2[2]~input_o ),
	.datad(\E2[3]~input_o ),
	.cin(gnd),
	.combout(\somador_ch|comp_2_2|inst|inst|inst3~combout ),
	.cout());
// synopsys translate_off
defparam \somador_ch|comp_2_2|inst|inst|inst3 .lut_mask = 16'h01FE;
defparam \somador_ch|comp_2_2|inst|inst|inst3 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \somador_ch|inst5|mux2x1_4|and_mux_1 (
// Equation(s):
// \somador_ch|inst5|mux2x1_4|and_mux_1~combout  = (\E2[4]~input_o  & \somador_ch|comp_2_2|inst|inst|inst3~combout )

	.dataa(\E2[4]~input_o ),
	.datab(\somador_ch|comp_2_2|inst|inst|inst3~combout ),
	.datac(gnd),
	.datad(gnd),
	.cin(gnd),
	.combout(\somador_ch|inst5|mux2x1_4|and_mux_1~combout ),
	.cout());
// synopsys translate_off
defparam \somador_ch|inst5|mux2x1_4|and_mux_1 .lut_mask = 16'h8888;
defparam \somador_ch|inst5|mux2x1_4|and_mux_1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \somador_ch|inst5|mux2x1_4|and_mux_2 (
// Equation(s):
// \somador_ch|inst5|mux2x1_4|and_mux_2~combout  = (\E2[3]~input_o  & !\E2[4]~input_o )

	.dataa(\E2[3]~input_o ),
	.datab(gnd),
	.datac(gnd),
	.datad(\E2[4]~input_o ),
	.cin(gnd),
	.combout(\somador_ch|inst5|mux2x1_4|and_mux_2~combout ),
	.cout());
// synopsys translate_off
defparam \somador_ch|inst5|mux2x1_4|and_mux_2 .lut_mask = 16'h00AA;
defparam \somador_ch|inst5|mux2x1_4|and_mux_2 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \somador|inst|inst3 (
// Equation(s):
// \somador|inst|inst3~combout  = \somador|inst5|inst4~0_combout  $ (\somador_ch|inst|mux2x1_4|or_mux~0_combout  $ (((\somador_ch|inst5|mux2x1_4|and_mux_1~combout ) # (\somador_ch|inst5|mux2x1_4|and_mux_2~combout ))))

	.dataa(\somador|inst5|inst4~0_combout ),
	.datab(\somador_ch|inst|mux2x1_4|or_mux~0_combout ),
	.datac(\somador_ch|inst5|mux2x1_4|and_mux_1~combout ),
	.datad(\somador_ch|inst5|mux2x1_4|and_mux_2~combout ),
	.cin(gnd),
	.combout(\somador|inst|inst3~combout ),
	.cout());
// synopsys translate_off
defparam \somador|inst|inst3 .lut_mask = 16'h9996;
defparam \somador|inst|inst3 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \somador|inst|inst4~0 (
// Equation(s):
// \somador|inst|inst4~0_combout  = (\somador|inst5|inst4~0_combout  & ((\somador_ch|inst5|mux2x1_4|and_mux_1~combout ) # ((\somador_ch|inst5|mux2x1_4|and_mux_2~combout ) # (\somador_ch|inst|mux2x1_4|or_mux~0_combout )))) # (!\somador|inst5|inst4~0_combout  
// & (\somador_ch|inst|mux2x1_4|or_mux~0_combout  & ((\somador_ch|inst5|mux2x1_4|and_mux_1~combout ) # (\somador_ch|inst5|mux2x1_4|and_mux_2~combout ))))

	.dataa(\somador_ch|inst5|mux2x1_4|and_mux_1~combout ),
	.datab(\somador_ch|inst5|mux2x1_4|and_mux_2~combout ),
	.datac(\somador|inst5|inst4~0_combout ),
	.datad(\somador_ch|inst|mux2x1_4|or_mux~0_combout ),
	.cin(gnd),
	.combout(\somador|inst|inst4~0_combout ),
	.cout());
// synopsys translate_off
defparam \somador|inst|inst4~0 .lut_mask = 16'hFEE0;
defparam \somador|inst|inst4~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \descomplementar|comp_2_seletor_5bits|mux2x1_5|or_mux~0 (
// Equation(s):
// \descomplementar|comp_2_seletor_5bits|mux2x1_5|or_mux~0_combout  = \somador|inst|inst4~0_combout  $ (((\inst|inst|or_mux~2_combout  & ((\descomplementar|comp_5bits|inst|inst5|inst1~combout ) # (\somador|inst|inst3~combout )))))

	.dataa(\descomplementar|comp_5bits|inst|inst5|inst1~combout ),
	.datab(\somador|inst|inst3~combout ),
	.datac(\somador|inst|inst4~0_combout ),
	.datad(\inst|inst|or_mux~2_combout ),
	.cin(gnd),
	.combout(\descomplementar|comp_2_seletor_5bits|mux2x1_5|or_mux~0_combout ),
	.cout());
// synopsys translate_off
defparam \descomplementar|comp_2_seletor_5bits|mux2x1_5|or_mux~0 .lut_mask = 16'h1EF0;
defparam \descomplementar|comp_2_seletor_5bits|mux2x1_5|or_mux~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \descomplementar|comp_2_seletor_5bits|mux2x1_4|or_mux~0 (
// Equation(s):
// \descomplementar|comp_2_seletor_5bits|mux2x1_4|or_mux~0_combout  = \somador|inst|inst3~combout  $ (((\inst|inst|or_mux~2_combout  & \descomplementar|comp_5bits|inst|inst5|inst1~combout )))

	.dataa(gnd),
	.datab(\somador|inst|inst3~combout ),
	.datac(\inst|inst|or_mux~2_combout ),
	.datad(\descomplementar|comp_5bits|inst|inst5|inst1~combout ),
	.cin(gnd),
	.combout(\descomplementar|comp_2_seletor_5bits|mux2x1_4|or_mux~0_combout ),
	.cout());
// synopsys translate_off
defparam \descomplementar|comp_2_seletor_5bits|mux2x1_4|or_mux~0 .lut_mask = 16'h3CCC;
defparam \descomplementar|comp_2_seletor_5bits|mux2x1_4|or_mux~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \somador|inst7|inst2 (
// Equation(s):
// \somador|inst7|inst2~combout  = \E1[0]~input_o  $ (\E2[0]~input_o )

	.dataa(gnd),
	.datab(gnd),
	.datac(\E1[0]~input_o ),
	.datad(\E2[0]~input_o ),
	.cin(gnd),
	.combout(\somador|inst7|inst2~combout ),
	.cout());
// synopsys translate_off
defparam \somador|inst7|inst2 .lut_mask = 16'h0FF0;
defparam \somador|inst7|inst2 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \descomplementar|comp_2_seletor_5bits|mux2x1_3|or_mux~0 (
// Equation(s):
// \descomplementar|comp_2_seletor_5bits|mux2x1_3|or_mux~0_combout  = \somador|inst5|inst3~0_combout  $ (((\inst|inst|or_mux~2_combout  & ((\somador|inst7|inst2~combout ) # (\somador|inst6|inst3~combout )))))

	.dataa(\somador|inst7|inst2~combout ),
	.datab(\somador|inst6|inst3~combout ),
	.datac(\somador|inst5|inst3~0_combout ),
	.datad(\inst|inst|or_mux~2_combout ),
	.cin(gnd),
	.combout(\descomplementar|comp_2_seletor_5bits|mux2x1_3|or_mux~0_combout ),
	.cout());
// synopsys translate_off
defparam \descomplementar|comp_2_seletor_5bits|mux2x1_3|or_mux~0 .lut_mask = 16'h1EF0;
defparam \descomplementar|comp_2_seletor_5bits|mux2x1_3|or_mux~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \descomplementar|comp_2_seletor_5bits|mux2x1_2|or_mux~2 (
// Equation(s):
// \descomplementar|comp_2_seletor_5bits|mux2x1_2|or_mux~2_combout  = \somador|inst6|inst3~combout  $ (((\inst|inst|or_mux~2_combout  & (\E1[0]~input_o  $ (\E2[0]~input_o )))))

	.dataa(\E1[0]~input_o ),
	.datab(\E2[0]~input_o ),
	.datac(\somador|inst6|inst3~combout ),
	.datad(\inst|inst|or_mux~2_combout ),
	.cin(gnd),
	.combout(\descomplementar|comp_2_seletor_5bits|mux2x1_2|or_mux~2_combout ),
	.cout());
// synopsys translate_off
defparam \descomplementar|comp_2_seletor_5bits|mux2x1_2|or_mux~2 .lut_mask = 16'h96F0;
defparam \descomplementar|comp_2_seletor_5bits|mux2x1_2|or_mux~2 .sum_lutc_input = "datac";
// synopsys translate_on

assign S[5] = \S[5]~output_o ;

assign S[4] = \S[4]~output_o ;

assign S[3] = \S[3]~output_o ;

assign S[2] = \S[2]~output_o ;

assign S[1] = \S[1]~output_o ;

assign S[0] = \S[0]~output_o ;

assign saida_antes[5] = \saida_antes[5]~output_o ;

assign saida_antes[4] = \saida_antes[4]~output_o ;

assign saida_antes[3] = \saida_antes[3]~output_o ;

assign saida_antes[2] = \saida_antes[2]~output_o ;

assign saida_antes[1] = \saida_antes[1]~output_o ;

assign saida_antes[0] = \saida_antes[0]~output_o ;
=======
wire \S2~input_o ;
wire \S1~input_o ;
wire \S0~input_o ;
wire \AnD[4]~input_o ;
wire \AnD[3]~input_o ;
wire \AnD[2]~input_o ;
wire \AnD[1]~input_o ;
wire \AnD[0]~input_o ;
wire \Comp_2[4]~input_o ;
wire \Comp_2[3]~input_o ;
wire \Comp_2[2]~input_o ;
wire \Comp_2[1]~input_o ;
wire \Comp_2[0]~input_o ;
wire \Soma[5]~input_o ;
wire \Soma[4]~input_o ;
wire \Soma[3]~input_o ;
wire \Soma[2]~input_o ;
wire \Soma[1]~input_o ;
wire \Soma[0]~input_o ;
wire \Sub[5]~input_o ;
wire \Sub[4]~input_o ;
wire \Sub[3]~input_o ;
wire \Sub[2]~input_o ;
wire \Sub[1]~input_o ;
wire \Sub[0]~input_o ;
wire \XoR[4]~input_o ;
wire \XoR[3]~input_o ;
wire \XoR[2]~input_o ;
wire \XoR[1]~input_o ;
wire \XoR[0]~input_o ;
wire \Saida[5]~output_o ;
wire \Saida[4]~output_o ;
wire \Saida[3]~output_o ;
wire \Saida[2]~output_o ;
wire \Saida[1]~output_o ;
wire \Saida[0]~output_o ;


cycloneive_io_obuf \Saida[5]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Saida[5]~output_o ),
	.obar());
// synopsys translate_off
defparam \Saida[5]~output .bus_hold = "false";
defparam \Saida[5]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \Saida[4]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Saida[4]~output_o ),
	.obar());
// synopsys translate_off
defparam \Saida[4]~output .bus_hold = "false";
defparam \Saida[4]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \Saida[3]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Saida[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \Saida[3]~output .bus_hold = "false";
defparam \Saida[3]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \Saida[2]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Saida[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \Saida[2]~output .bus_hold = "false";
defparam \Saida[2]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \Saida[1]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Saida[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \Saida[1]~output .bus_hold = "false";
defparam \Saida[1]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \Saida[0]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\Saida[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \Saida[0]~output .bus_hold = "false";
defparam \Saida[0]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_ibuf \S2~input (
	.i(S2),
	.ibar(gnd),
	.o(\S2~input_o ));
// synopsys translate_off
defparam \S2~input .bus_hold = "false";
defparam \S2~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \S1~input (
	.i(S1),
	.ibar(gnd),
	.o(\S1~input_o ));
// synopsys translate_off
defparam \S1~input .bus_hold = "false";
defparam \S1~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \S0~input (
	.i(S0),
	.ibar(gnd),
	.o(\S0~input_o ));
// synopsys translate_off
defparam \S0~input .bus_hold = "false";
defparam \S0~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \AnD[4]~input (
	.i(\AnD [4]),
	.ibar(gnd),
	.o(\AnD[4]~input_o ));
// synopsys translate_off
defparam \AnD[4]~input .bus_hold = "false";
defparam \AnD[4]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \AnD[3]~input (
	.i(\AnD [3]),
	.ibar(gnd),
	.o(\AnD[3]~input_o ));
// synopsys translate_off
defparam \AnD[3]~input .bus_hold = "false";
defparam \AnD[3]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \AnD[2]~input (
	.i(\AnD [2]),
	.ibar(gnd),
	.o(\AnD[2]~input_o ));
// synopsys translate_off
defparam \AnD[2]~input .bus_hold = "false";
defparam \AnD[2]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \AnD[1]~input (
	.i(\AnD [1]),
	.ibar(gnd),
	.o(\AnD[1]~input_o ));
// synopsys translate_off
defparam \AnD[1]~input .bus_hold = "false";
defparam \AnD[1]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \AnD[0]~input (
	.i(\AnD [0]),
	.ibar(gnd),
	.o(\AnD[0]~input_o ));
// synopsys translate_off
defparam \AnD[0]~input .bus_hold = "false";
defparam \AnD[0]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \Comp_2[4]~input (
	.i(Comp_2[4]),
	.ibar(gnd),
	.o(\Comp_2[4]~input_o ));
// synopsys translate_off
defparam \Comp_2[4]~input .bus_hold = "false";
defparam \Comp_2[4]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \Comp_2[3]~input (
	.i(Comp_2[3]),
	.ibar(gnd),
	.o(\Comp_2[3]~input_o ));
// synopsys translate_off
defparam \Comp_2[3]~input .bus_hold = "false";
defparam \Comp_2[3]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \Comp_2[2]~input (
	.i(Comp_2[2]),
	.ibar(gnd),
	.o(\Comp_2[2]~input_o ));
// synopsys translate_off
defparam \Comp_2[2]~input .bus_hold = "false";
defparam \Comp_2[2]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \Comp_2[1]~input (
	.i(Comp_2[1]),
	.ibar(gnd),
	.o(\Comp_2[1]~input_o ));
// synopsys translate_off
defparam \Comp_2[1]~input .bus_hold = "false";
defparam \Comp_2[1]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \Comp_2[0]~input (
	.i(Comp_2[0]),
	.ibar(gnd),
	.o(\Comp_2[0]~input_o ));
// synopsys translate_off
defparam \Comp_2[0]~input .bus_hold = "false";
defparam \Comp_2[0]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \Soma[5]~input (
	.i(Soma[5]),
	.ibar(gnd),
	.o(\Soma[5]~input_o ));
// synopsys translate_off
defparam \Soma[5]~input .bus_hold = "false";
defparam \Soma[5]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \Soma[4]~input (
	.i(Soma[4]),
	.ibar(gnd),
	.o(\Soma[4]~input_o ));
// synopsys translate_off
defparam \Soma[4]~input .bus_hold = "false";
defparam \Soma[4]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \Soma[3]~input (
	.i(Soma[3]),
	.ibar(gnd),
	.o(\Soma[3]~input_o ));
// synopsys translate_off
defparam \Soma[3]~input .bus_hold = "false";
defparam \Soma[3]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \Soma[2]~input (
	.i(Soma[2]),
	.ibar(gnd),
	.o(\Soma[2]~input_o ));
// synopsys translate_off
defparam \Soma[2]~input .bus_hold = "false";
defparam \Soma[2]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \Soma[1]~input (
	.i(Soma[1]),
	.ibar(gnd),
	.o(\Soma[1]~input_o ));
// synopsys translate_off
defparam \Soma[1]~input .bus_hold = "false";
defparam \Soma[1]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \Soma[0]~input (
	.i(Soma[0]),
	.ibar(gnd),
	.o(\Soma[0]~input_o ));
// synopsys translate_off
defparam \Soma[0]~input .bus_hold = "false";
defparam \Soma[0]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \Sub[5]~input (
	.i(Sub[5]),
	.ibar(gnd),
	.o(\Sub[5]~input_o ));
// synopsys translate_off
defparam \Sub[5]~input .bus_hold = "false";
defparam \Sub[5]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \Sub[4]~input (
	.i(Sub[4]),
	.ibar(gnd),
	.o(\Sub[4]~input_o ));
// synopsys translate_off
defparam \Sub[4]~input .bus_hold = "false";
defparam \Sub[4]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \Sub[3]~input (
	.i(Sub[3]),
	.ibar(gnd),
	.o(\Sub[3]~input_o ));
// synopsys translate_off
defparam \Sub[3]~input .bus_hold = "false";
defparam \Sub[3]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \Sub[2]~input (
	.i(Sub[2]),
	.ibar(gnd),
	.o(\Sub[2]~input_o ));
// synopsys translate_off
defparam \Sub[2]~input .bus_hold = "false";
defparam \Sub[2]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \Sub[1]~input (
	.i(Sub[1]),
	.ibar(gnd),
	.o(\Sub[1]~input_o ));
// synopsys translate_off
defparam \Sub[1]~input .bus_hold = "false";
defparam \Sub[1]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \Sub[0]~input (
	.i(Sub[0]),
	.ibar(gnd),
	.o(\Sub[0]~input_o ));
// synopsys translate_off
defparam \Sub[0]~input .bus_hold = "false";
defparam \Sub[0]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \XoR[4]~input (
	.i(\XoR [4]),
	.ibar(gnd),
	.o(\XoR[4]~input_o ));
// synopsys translate_off
defparam \XoR[4]~input .bus_hold = "false";
defparam \XoR[4]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \XoR[3]~input (
	.i(\XoR [3]),
	.ibar(gnd),
	.o(\XoR[3]~input_o ));
// synopsys translate_off
defparam \XoR[3]~input .bus_hold = "false";
defparam \XoR[3]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \XoR[2]~input (
	.i(\XoR [2]),
	.ibar(gnd),
	.o(\XoR[2]~input_o ));
// synopsys translate_off
defparam \XoR[2]~input .bus_hold = "false";
defparam \XoR[2]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \XoR[1]~input (
	.i(\XoR [1]),
	.ibar(gnd),
	.o(\XoR[1]~input_o ));
// synopsys translate_off
defparam \XoR[1]~input .bus_hold = "false";
defparam \XoR[1]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \XoR[0]~input (
	.i(\XoR [0]),
	.ibar(gnd),
	.o(\XoR[0]~input_o ));
// synopsys translate_off
defparam \XoR[0]~input .bus_hold = "false";
defparam \XoR[0]~input .simulate_z_as = "z";
// synopsys translate_on

assign Saida[5] = \Saida[5]~output_o ;

assign Saida[4] = \Saida[4]~output_o ;

assign Saida[3] = \Saida[3]~output_o ;

assign Saida[2] = \Saida[2]~output_o ;

assign Saida[1] = \Saida[1]~output_o ;

assign Saida[0] = \Saida[0]~output_o ;
>>>>>>> 61c76b4bc868c347221f6b15a9d30183ae1b7918

endmodule
