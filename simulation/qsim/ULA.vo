// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 20.1.1 Build 720 11/11/2020 SJ Lite Edition"

// DATE "07/22/2021 23:42:21"

// 
// Device: Altera EP4CE6E22C6 Package TQFP144
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module conversor_completo (
	DIGITO1,
	F,
	E,
	DIGITO2);
output 	[3:0] DIGITO1;
input 	[5:0] F;
input 	E;
output 	[3:0] DIGITO2;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \F[5]~input_o ;
wire \DIGITO1[3]~output_o ;
wire \DIGITO1[2]~output_o ;
wire \DIGITO1[1]~output_o ;
wire \DIGITO1[0]~output_o ;
wire \DIGITO2[3]~output_o ;
wire \DIGITO2[2]~output_o ;
wire \DIGITO2[1]~output_o ;
wire \DIGITO2[0]~output_o ;
wire \E~input_o ;
wire \F[3]~input_o ;
wire \F[1]~input_o ;
wire \inst2|mux2x1_2|or_mux~0_combout ;
wire \F[2]~input_o ;
wire \F[4]~input_o ;
wire \inst|mux2x1_4|and_mux_1~0_combout ;
wire \inst2|mux2x1_1|or_mux~0_combout ;
wire \inst2|mux2x1_1|or_mux~1_combout ;
wire \inst2|mux2x1_2|or_mux~1_combout ;
wire \inst11|inst6|inst1~combout ;
wire \inst2|mux2x1_2|or_mux~2_combout ;
wire \inst2|mux2x1_3|or_mux~0_combout ;
wire \F[0]~input_o ;


cycloneive_io_obuf \DIGITO1[3]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\DIGITO1[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \DIGITO1[3]~output .bus_hold = "false";
defparam \DIGITO1[3]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \DIGITO1[2]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\DIGITO1[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \DIGITO1[2]~output .bus_hold = "false";
defparam \DIGITO1[2]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \DIGITO1[1]~output (
	.i(gnd),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\DIGITO1[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \DIGITO1[1]~output .bus_hold = "false";
defparam \DIGITO1[1]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \DIGITO1[0]~output (
	.i(\inst|mux2x1_4|and_mux_1~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\DIGITO1[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \DIGITO1[0]~output .bus_hold = "false";
defparam \DIGITO1[0]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \DIGITO2[3]~output (
	.i(\inst2|mux2x1_1|or_mux~1_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\DIGITO2[3]~output_o ),
	.obar());
// synopsys translate_off
defparam \DIGITO2[3]~output .bus_hold = "false";
defparam \DIGITO2[3]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \DIGITO2[2]~output (
	.i(\inst2|mux2x1_2|or_mux~2_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\DIGITO2[2]~output_o ),
	.obar());
// synopsys translate_off
defparam \DIGITO2[2]~output .bus_hold = "false";
defparam \DIGITO2[2]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \DIGITO2[1]~output (
	.i(\inst2|mux2x1_3|or_mux~0_combout ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\DIGITO2[1]~output_o ),
	.obar());
// synopsys translate_off
defparam \DIGITO2[1]~output .bus_hold = "false";
defparam \DIGITO2[1]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_obuf \DIGITO2[0]~output (
	.i(\F[0]~input_o ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\DIGITO2[0]~output_o ),
	.obar());
// synopsys translate_off
defparam \DIGITO2[0]~output .bus_hold = "false";
defparam \DIGITO2[0]~output .open_drain_output = "false";
// synopsys translate_on

cycloneive_io_ibuf \E~input (
	.i(E),
	.ibar(gnd),
	.o(\E~input_o ));
// synopsys translate_off
defparam \E~input .bus_hold = "false";
defparam \E~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \F[3]~input (
	.i(F[3]),
	.ibar(gnd),
	.o(\F[3]~input_o ));
// synopsys translate_off
defparam \F[3]~input .bus_hold = "false";
defparam \F[3]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \F[1]~input (
	.i(F[1]),
	.ibar(gnd),
	.o(\F[1]~input_o ));
// synopsys translate_off
defparam \F[1]~input .bus_hold = "false";
defparam \F[1]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \inst2|mux2x1_2|or_mux~0 (
// Equation(s):
// \inst2|mux2x1_2|or_mux~0_combout  = (\F[3]~input_o  & \F[1]~input_o )

	.dataa(\F[3]~input_o ),
	.datab(\F[1]~input_o ),
	.datac(gnd),
	.datad(gnd),
	.cin(gnd),
	.combout(\inst2|mux2x1_2|or_mux~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst2|mux2x1_2|or_mux~0 .lut_mask = 16'h8888;
defparam \inst2|mux2x1_2|or_mux~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_io_ibuf \F[2]~input (
	.i(F[2]),
	.ibar(gnd),
	.o(\F[2]~input_o ));
// synopsys translate_off
defparam \F[2]~input .bus_hold = "false";
defparam \F[2]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \F[4]~input (
	.i(F[4]),
	.ibar(gnd),
	.o(\F[4]~input_o ));
// synopsys translate_off
defparam \F[4]~input .bus_hold = "false";
defparam \F[4]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_lcell_comb \inst|mux2x1_4|and_mux_1~0 (
// Equation(s):
// \inst|mux2x1_4|and_mux_1~0_combout  = (\E~input_o  & (((\inst2|mux2x1_2|or_mux~0_combout  & \F[2]~input_o )) # (!\F[4]~input_o )))

	.dataa(\E~input_o ),
	.datab(\inst2|mux2x1_2|or_mux~0_combout ),
	.datac(\F[2]~input_o ),
	.datad(\F[4]~input_o ),
	.cin(gnd),
	.combout(\inst|mux2x1_4|and_mux_1~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst|mux2x1_4|and_mux_1~0 .lut_mask = 16'h80AA;
defparam \inst|mux2x1_4|and_mux_1~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \inst2|mux2x1_1|or_mux~0 (
// Equation(s):
// \inst2|mux2x1_1|or_mux~0_combout  = (\F[3]~input_o  & (\F[2]~input_o  & !\F[1]~input_o )) # (!\F[3]~input_o  & (!\F[2]~input_o  & \F[1]~input_o ))

	.dataa(\F[3]~input_o ),
	.datab(\F[2]~input_o ),
	.datac(\F[1]~input_o ),
	.datad(gnd),
	.cin(gnd),
	.combout(\inst2|mux2x1_1|or_mux~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst2|mux2x1_1|or_mux~0 .lut_mask = 16'h1818;
defparam \inst2|mux2x1_1|or_mux~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \inst2|mux2x1_1|or_mux~1 (
// Equation(s):
// \inst2|mux2x1_1|or_mux~1_combout  = (\E~input_o  & (\F[4]~input_o  & ((\inst2|mux2x1_1|or_mux~0_combout )))) # (!\E~input_o  & (((\F[3]~input_o ))))

	.dataa(\F[4]~input_o ),
	.datab(\E~input_o ),
	.datac(\F[3]~input_o ),
	.datad(\inst2|mux2x1_1|or_mux~0_combout ),
	.cin(gnd),
	.combout(\inst2|mux2x1_1|or_mux~1_combout ),
	.cout());
// synopsys translate_off
defparam \inst2|mux2x1_1|or_mux~1 .lut_mask = 16'hB830;
defparam \inst2|mux2x1_1|or_mux~1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \inst2|mux2x1_2|or_mux~1 (
// Equation(s):
// \inst2|mux2x1_2|or_mux~1_combout  = (\F[2]~input_o  & (((\F[1]~input_o  & !\F[4]~input_o )) # (!\E~input_o )))

	.dataa(\F[2]~input_o ),
	.datab(\F[1]~input_o ),
	.datac(\F[4]~input_o ),
	.datad(\E~input_o ),
	.cin(gnd),
	.combout(\inst2|mux2x1_2|or_mux~1_combout ),
	.cout());
// synopsys translate_off
defparam \inst2|mux2x1_2|or_mux~1 .lut_mask = 16'h08AA;
defparam \inst2|mux2x1_2|or_mux~1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \inst11|inst6|inst1 (
// Equation(s):
// \inst11|inst6|inst1~combout  = (\F[4]~input_o  & (\F[3]~input_o  & !\F[2]~input_o ))

	.dataa(\F[4]~input_o ),
	.datab(\F[3]~input_o ),
	.datac(gnd),
	.datad(\F[2]~input_o ),
	.cin(gnd),
	.combout(\inst11|inst6|inst1~combout ),
	.cout());
// synopsys translate_off
defparam \inst11|inst6|inst1 .lut_mask = 16'h0088;
defparam \inst11|inst6|inst1 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \inst2|mux2x1_2|or_mux~2 (
// Equation(s):
// \inst2|mux2x1_2|or_mux~2_combout  = (\inst2|mux2x1_2|or_mux~1_combout ) # ((\E~input_o  & ((\inst2|mux2x1_2|or_mux~0_combout ) # (\inst11|inst6|inst1~combout ))))

	.dataa(\inst2|mux2x1_2|or_mux~1_combout ),
	.datab(\E~input_o ),
	.datac(\inst2|mux2x1_2|or_mux~0_combout ),
	.datad(\inst11|inst6|inst1~combout ),
	.cin(gnd),
	.combout(\inst2|mux2x1_2|or_mux~2_combout ),
	.cout());
// synopsys translate_off
defparam \inst2|mux2x1_2|or_mux~2 .lut_mask = 16'hEEEA;
defparam \inst2|mux2x1_2|or_mux~2 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_lcell_comb \inst2|mux2x1_3|or_mux~0 (
// Equation(s):
// \inst2|mux2x1_3|or_mux~0_combout  = (\E~input_o  & ((\inst11|inst6|inst1~combout ) # (!\F[1]~input_o ))) # (!\E~input_o  & ((\F[1]~input_o )))

	.dataa(\inst11|inst6|inst1~combout ),
	.datab(gnd),
	.datac(\E~input_o ),
	.datad(\F[1]~input_o ),
	.cin(gnd),
	.combout(\inst2|mux2x1_3|or_mux~0_combout ),
	.cout());
// synopsys translate_off
defparam \inst2|mux2x1_3|or_mux~0 .lut_mask = 16'hAFF0;
defparam \inst2|mux2x1_3|or_mux~0 .sum_lutc_input = "datac";
// synopsys translate_on

cycloneive_io_ibuf \F[0]~input (
	.i(F[0]),
	.ibar(gnd),
	.o(\F[0]~input_o ));
// synopsys translate_off
defparam \F[0]~input .bus_hold = "false";
defparam \F[0]~input .simulate_z_as = "z";
// synopsys translate_on

cycloneive_io_ibuf \F[5]~input (
	.i(F[5]),
	.ibar(gnd),
	.o(\F[5]~input_o ));
// synopsys translate_off
defparam \F[5]~input .bus_hold = "false";
defparam \F[5]~input .simulate_z_as = "z";
// synopsys translate_on

assign DIGITO1[3] = \DIGITO1[3]~output_o ;

assign DIGITO1[2] = \DIGITO1[2]~output_o ;

assign DIGITO1[1] = \DIGITO1[1]~output_o ;

assign DIGITO1[0] = \DIGITO1[0]~output_o ;

assign DIGITO2[3] = \DIGITO2[3]~output_o ;

assign DIGITO2[2] = \DIGITO2[2]~output_o ;

assign DIGITO2[1] = \DIGITO2[1]~output_o ;

assign DIGITO2[0] = \DIGITO2[0]~output_o ;

endmodule
