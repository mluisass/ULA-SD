// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "07/21/2021 20:30:29"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          MenorQue_completo
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module MenorQue_completo_vlg_vec_tst();
// constants                                           
// general purpose registers
reg [4:0] EntradaA;
reg [4:0] EntradaB;
// wires                                               
wire Saida;

// assign statements (if any)                          
MenorQue_completo i1 (
// port map - connection between master ports and signals/registers   
	.EntradaA(EntradaA),
	.EntradaB(EntradaB),
	.Saida(Saida)
);
initial 
begin 
#1000000 $finish;
end 
// EntradaA[ 4 ]
initial
begin
	EntradaA[4] = 1'b0;
	EntradaA[4] = #5000 1'b1;
	EntradaA[4] = #10000 1'b0;
	EntradaA[4] = #5000 1'b1;
	EntradaA[4] = #5000 1'b0;
	EntradaA[4] = #10000 1'b1;
	EntradaA[4] = #15000 1'b0;
	EntradaA[4] = #5000 1'b1;
	EntradaA[4] = #5000 1'b0;
	EntradaA[4] = #5000 1'b1;
	EntradaA[4] = #10000 1'b0;
	EntradaA[4] = #10000 1'b1;
	EntradaA[4] = #5000 1'b0;
	EntradaA[4] = #5000 1'b1;
	EntradaA[4] = #10000 1'b0;
	EntradaA[4] = #5000 1'b1;
	EntradaA[4] = #5000 1'b0;
	EntradaA[4] = #5000 1'b1;
	EntradaA[4] = #5000 1'b0;
	EntradaA[4] = #5000 1'b1;
	EntradaA[4] = #5000 1'b0;
	EntradaA[4] = #10000 1'b1;
	EntradaA[4] = #5000 1'b0;
	EntradaA[4] = #15000 1'b1;
	EntradaA[4] = #10000 1'b0;
	EntradaA[4] = #5000 1'b1;
	EntradaA[4] = #15000 1'b0;
	EntradaA[4] = #5000 1'b1;
	EntradaA[4] = #20000 1'b0;
	EntradaA[4] = #5000 1'b1;
	EntradaA[4] = #10000 1'b0;
	EntradaA[4] = #20000 1'b1;
	EntradaA[4] = #5000 1'b0;
	EntradaA[4] = #20000 1'b1;
	EntradaA[4] = #40000 1'b0;
	EntradaA[4] = #5000 1'b1;
	EntradaA[4] = #15000 1'b0;
	EntradaA[4] = #5000 1'b1;
	EntradaA[4] = #15000 1'b0;
	EntradaA[4] = #5000 1'b1;
	EntradaA[4] = #5000 1'b0;
	EntradaA[4] = #15000 1'b1;
	EntradaA[4] = #20000 1'b0;
	EntradaA[4] = #5000 1'b1;
	EntradaA[4] = #15000 1'b0;
	EntradaA[4] = #5000 1'b1;
	EntradaA[4] = #5000 1'b0;
	EntradaA[4] = #5000 1'b1;
	EntradaA[4] = #20000 1'b0;
	EntradaA[4] = #5000 1'b1;
	EntradaA[4] = #5000 1'b0;
	EntradaA[4] = #10000 1'b1;
	EntradaA[4] = #5000 1'b0;
	EntradaA[4] = #10000 1'b1;
	EntradaA[4] = #5000 1'b0;
	EntradaA[4] = #5000 1'b1;
	EntradaA[4] = #30000 1'b0;
	EntradaA[4] = #10000 1'b1;
	EntradaA[4] = #5000 1'b0;
	EntradaA[4] = #5000 1'b1;
	EntradaA[4] = #5000 1'b0;
	EntradaA[4] = #5000 1'b1;
	EntradaA[4] = #10000 1'b0;
	EntradaA[4] = #25000 1'b1;
	EntradaA[4] = #10000 1'b0;
	EntradaA[4] = #5000 1'b1;
	EntradaA[4] = #5000 1'b0;
	EntradaA[4] = #10000 1'b1;
	EntradaA[4] = #10000 1'b0;
	EntradaA[4] = #20000 1'b1;
	EntradaA[4] = #5000 1'b0;
	EntradaA[4] = #5000 1'b1;
	EntradaA[4] = #10000 1'b0;
	EntradaA[4] = #15000 1'b1;
	EntradaA[4] = #5000 1'b0;
	EntradaA[4] = #20000 1'b1;
	EntradaA[4] = #5000 1'b0;
	EntradaA[4] = #5000 1'b1;
	EntradaA[4] = #10000 1'b0;
	EntradaA[4] = #5000 1'b1;
	EntradaA[4] = #5000 1'b0;
	EntradaA[4] = #5000 1'b1;
	EntradaA[4] = #5000 1'b0;
	EntradaA[4] = #15000 1'b1;
	EntradaA[4] = #15000 1'b0;
	EntradaA[4] = #5000 1'b1;
	EntradaA[4] = #5000 1'b0;
	EntradaA[4] = #5000 1'b1;
	EntradaA[4] = #5000 1'b0;
	EntradaA[4] = #10000 1'b1;
	EntradaA[4] = #5000 1'b0;
	EntradaA[4] = #10000 1'b1;
	EntradaA[4] = #5000 1'b0;
	EntradaA[4] = #10000 1'b1;
	EntradaA[4] = #5000 1'b0;
	EntradaA[4] = #5000 1'b1;
	EntradaA[4] = #25000 1'b0;
	EntradaA[4] = #15000 1'b1;
	EntradaA[4] = #5000 1'b0;
	EntradaA[4] = #10000 1'b1;
	EntradaA[4] = #10000 1'b0;
	EntradaA[4] = #10000 1'b1;
	EntradaA[4] = #5000 1'b0;
	EntradaA[4] = #10000 1'b1;
	EntradaA[4] = #5000 1'b0;
	EntradaA[4] = #15000 1'b1;
	EntradaA[4] = #15000 1'b0;
	EntradaA[4] = #10000 1'b1;
end 
// EntradaA[ 3 ]
initial
begin
	EntradaA[3] = 1'b1;
	EntradaA[3] = #5000 1'b0;
	EntradaA[3] = #5000 1'b1;
	EntradaA[3] = #5000 1'b0;
	EntradaA[3] = #10000 1'b1;
	EntradaA[3] = #25000 1'b0;
	EntradaA[3] = #5000 1'b1;
	EntradaA[3] = #20000 1'b0;
	EntradaA[3] = #5000 1'b1;
	EntradaA[3] = #10000 1'b0;
	EntradaA[3] = #5000 1'b1;
	EntradaA[3] = #10000 1'b0;
	EntradaA[3] = #25000 1'b1;
	EntradaA[3] = #20000 1'b0;
	EntradaA[3] = #15000 1'b1;
	EntradaA[3] = #5000 1'b0;
	EntradaA[3] = #5000 1'b1;
	EntradaA[3] = #15000 1'b0;
	EntradaA[3] = #20000 1'b1;
	EntradaA[3] = #5000 1'b0;
	EntradaA[3] = #5000 1'b1;
	EntradaA[3] = #5000 1'b0;
	EntradaA[3] = #10000 1'b1;
	EntradaA[3] = #10000 1'b0;
	EntradaA[3] = #5000 1'b1;
	EntradaA[3] = #5000 1'b0;
	EntradaA[3] = #5000 1'b1;
	EntradaA[3] = #5000 1'b0;
	EntradaA[3] = #5000 1'b1;
	EntradaA[3] = #5000 1'b0;
	EntradaA[3] = #5000 1'b1;
	EntradaA[3] = #10000 1'b0;
	EntradaA[3] = #10000 1'b1;
	EntradaA[3] = #10000 1'b0;
	EntradaA[3] = #10000 1'b1;
	EntradaA[3] = #5000 1'b0;
	EntradaA[3] = #5000 1'b1;
	EntradaA[3] = #10000 1'b0;
	EntradaA[3] = #5000 1'b1;
	EntradaA[3] = #10000 1'b0;
	EntradaA[3] = #5000 1'b1;
	EntradaA[3] = #5000 1'b0;
	EntradaA[3] = #10000 1'b1;
	EntradaA[3] = #5000 1'b0;
	EntradaA[3] = #10000 1'b1;
	EntradaA[3] = #5000 1'b0;
	EntradaA[3] = #5000 1'b1;
	EntradaA[3] = #5000 1'b0;
	EntradaA[3] = #5000 1'b1;
	EntradaA[3] = #10000 1'b0;
	EntradaA[3] = #10000 1'b1;
	EntradaA[3] = #15000 1'b0;
	EntradaA[3] = #5000 1'b1;
	EntradaA[3] = #50000 1'b0;
	EntradaA[3] = #5000 1'b1;
	EntradaA[3] = #5000 1'b0;
	EntradaA[3] = #5000 1'b1;
	EntradaA[3] = #15000 1'b0;
	EntradaA[3] = #5000 1'b1;
	EntradaA[3] = #5000 1'b0;
	EntradaA[3] = #5000 1'b1;
	EntradaA[3] = #15000 1'b0;
	EntradaA[3] = #5000 1'b1;
	EntradaA[3] = #10000 1'b0;
	EntradaA[3] = #5000 1'b1;
	EntradaA[3] = #15000 1'b0;
	EntradaA[3] = #10000 1'b1;
	EntradaA[3] = #5000 1'b0;
	EntradaA[3] = #5000 1'b1;
	EntradaA[3] = #5000 1'b0;
	EntradaA[3] = #10000 1'b1;
	EntradaA[3] = #5000 1'b0;
	EntradaA[3] = #5000 1'b1;
	EntradaA[3] = #5000 1'b0;
	EntradaA[3] = #10000 1'b1;
	EntradaA[3] = #10000 1'b0;
	EntradaA[3] = #15000 1'b1;
	EntradaA[3] = #5000 1'b0;
	EntradaA[3] = #5000 1'b1;
	EntradaA[3] = #10000 1'b0;
	EntradaA[3] = #5000 1'b1;
	EntradaA[3] = #5000 1'b0;
	EntradaA[3] = #5000 1'b1;
	EntradaA[3] = #10000 1'b0;
	EntradaA[3] = #10000 1'b1;
	EntradaA[3] = #10000 1'b0;
	EntradaA[3] = #5000 1'b1;
	EntradaA[3] = #5000 1'b0;
	EntradaA[3] = #5000 1'b1;
	EntradaA[3] = #10000 1'b0;
	EntradaA[3] = #5000 1'b1;
	EntradaA[3] = #10000 1'b0;
	EntradaA[3] = #5000 1'b1;
	EntradaA[3] = #20000 1'b0;
	EntradaA[3] = #5000 1'b1;
	EntradaA[3] = #5000 1'b0;
	EntradaA[3] = #5000 1'b1;
	EntradaA[3] = #5000 1'b0;
	EntradaA[3] = #5000 1'b1;
	EntradaA[3] = #10000 1'b0;
	EntradaA[3] = #10000 1'b1;
	EntradaA[3] = #5000 1'b0;
	EntradaA[3] = #15000 1'b1;
	EntradaA[3] = #10000 1'b0;
	EntradaA[3] = #5000 1'b1;
	EntradaA[3] = #5000 1'b0;
	EntradaA[3] = #10000 1'b1;
	EntradaA[3] = #5000 1'b0;
	EntradaA[3] = #10000 1'b1;
	EntradaA[3] = #25000 1'b0;
	EntradaA[3] = #5000 1'b1;
	EntradaA[3] = #5000 1'b0;
	EntradaA[3] = #15000 1'b1;
	EntradaA[3] = #10000 1'b0;
end 
// EntradaA[ 2 ]
initial
begin
	EntradaA[2] = 1'b0;
	EntradaA[2] = #5000 1'b1;
	EntradaA[2] = #25000 1'b0;
	EntradaA[2] = #5000 1'b1;
	EntradaA[2] = #5000 1'b0;
	EntradaA[2] = #5000 1'b1;
	EntradaA[2] = #10000 1'b0;
	EntradaA[2] = #5000 1'b1;
	EntradaA[2] = #5000 1'b0;
	EntradaA[2] = #10000 1'b1;
	EntradaA[2] = #5000 1'b0;
	EntradaA[2] = #5000 1'b1;
	EntradaA[2] = #5000 1'b0;
	EntradaA[2] = #5000 1'b1;
	EntradaA[2] = #10000 1'b0;
	EntradaA[2] = #5000 1'b1;
	EntradaA[2] = #5000 1'b0;
	EntradaA[2] = #10000 1'b1;
	EntradaA[2] = #10000 1'b0;
	EntradaA[2] = #25000 1'b1;
	EntradaA[2] = #10000 1'b0;
	EntradaA[2] = #5000 1'b1;
	EntradaA[2] = #25000 1'b0;
	EntradaA[2] = #15000 1'b1;
	EntradaA[2] = #5000 1'b0;
	EntradaA[2] = #10000 1'b1;
	EntradaA[2] = #5000 1'b0;
	EntradaA[2] = #15000 1'b1;
	EntradaA[2] = #5000 1'b0;
	EntradaA[2] = #5000 1'b1;
	EntradaA[2] = #20000 1'b0;
	EntradaA[2] = #5000 1'b1;
	EntradaA[2] = #20000 1'b0;
	EntradaA[2] = #10000 1'b1;
	EntradaA[2] = #20000 1'b0;
	EntradaA[2] = #5000 1'b1;
	EntradaA[2] = #10000 1'b0;
	EntradaA[2] = #5000 1'b1;
	EntradaA[2] = #25000 1'b0;
	EntradaA[2] = #10000 1'b1;
	EntradaA[2] = #5000 1'b0;
	EntradaA[2] = #10000 1'b1;
	EntradaA[2] = #5000 1'b0;
	EntradaA[2] = #5000 1'b1;
	EntradaA[2] = #10000 1'b0;
	EntradaA[2] = #5000 1'b1;
	EntradaA[2] = #5000 1'b0;
	EntradaA[2] = #10000 1'b1;
	EntradaA[2] = #10000 1'b0;
	EntradaA[2] = #25000 1'b1;
	EntradaA[2] = #5000 1'b0;
	EntradaA[2] = #10000 1'b1;
	EntradaA[2] = #5000 1'b0;
	EntradaA[2] = #5000 1'b1;
	EntradaA[2] = #5000 1'b0;
	EntradaA[2] = #5000 1'b1;
	EntradaA[2] = #15000 1'b0;
	EntradaA[2] = #5000 1'b1;
	EntradaA[2] = #15000 1'b0;
	EntradaA[2] = #5000 1'b1;
	EntradaA[2] = #5000 1'b0;
	EntradaA[2] = #5000 1'b1;
	EntradaA[2] = #15000 1'b0;
	EntradaA[2] = #5000 1'b1;
	EntradaA[2] = #5000 1'b0;
	EntradaA[2] = #5000 1'b1;
	EntradaA[2] = #10000 1'b0;
	EntradaA[2] = #5000 1'b1;
	EntradaA[2] = #10000 1'b0;
	EntradaA[2] = #5000 1'b1;
	EntradaA[2] = #5000 1'b0;
	EntradaA[2] = #5000 1'b1;
	EntradaA[2] = #5000 1'b0;
	EntradaA[2] = #5000 1'b1;
	EntradaA[2] = #10000 1'b0;
	EntradaA[2] = #5000 1'b1;
	EntradaA[2] = #15000 1'b0;
	EntradaA[2] = #5000 1'b1;
	EntradaA[2] = #20000 1'b0;
	EntradaA[2] = #10000 1'b1;
	EntradaA[2] = #15000 1'b0;
	EntradaA[2] = #5000 1'b1;
	EntradaA[2] = #10000 1'b0;
	EntradaA[2] = #10000 1'b1;
	EntradaA[2] = #5000 1'b0;
	EntradaA[2] = #15000 1'b1;
	EntradaA[2] = #5000 1'b0;
	EntradaA[2] = #5000 1'b1;
	EntradaA[2] = #5000 1'b0;
	EntradaA[2] = #15000 1'b1;
	EntradaA[2] = #5000 1'b0;
	EntradaA[2] = #10000 1'b1;
	EntradaA[2] = #10000 1'b0;
	EntradaA[2] = #5000 1'b1;
	EntradaA[2] = #20000 1'b0;
	EntradaA[2] = #15000 1'b1;
	EntradaA[2] = #5000 1'b0;
	EntradaA[2] = #10000 1'b1;
	EntradaA[2] = #5000 1'b0;
	EntradaA[2] = #40000 1'b1;
	EntradaA[2] = #10000 1'b0;
	EntradaA[2] = #10000 1'b1;
	EntradaA[2] = #10000 1'b0;
	EntradaA[2] = #5000 1'b1;
	EntradaA[2] = #5000 1'b0;
	EntradaA[2] = #20000 1'b1;
	EntradaA[2] = #10000 1'b0;
end 
// EntradaA[ 1 ]
initial
begin
	EntradaA[1] = 1'b0;
	EntradaA[1] = #10000 1'b1;
	EntradaA[1] = #5000 1'b0;
	EntradaA[1] = #5000 1'b1;
	EntradaA[1] = #5000 1'b0;
	EntradaA[1] = #10000 1'b1;
	EntradaA[1] = #5000 1'b0;
	EntradaA[1] = #10000 1'b1;
	EntradaA[1] = #20000 1'b0;
	EntradaA[1] = #5000 1'b1;
	EntradaA[1] = #5000 1'b0;
	EntradaA[1] = #10000 1'b1;
	EntradaA[1] = #35000 1'b0;
	EntradaA[1] = #5000 1'b1;
	EntradaA[1] = #5000 1'b0;
	EntradaA[1] = #5000 1'b1;
	EntradaA[1] = #5000 1'b0;
	EntradaA[1] = #5000 1'b1;
	EntradaA[1] = #10000 1'b0;
	EntradaA[1] = #5000 1'b1;
	EntradaA[1] = #5000 1'b0;
	EntradaA[1] = #5000 1'b1;
	EntradaA[1] = #10000 1'b0;
	EntradaA[1] = #10000 1'b1;
	EntradaA[1] = #5000 1'b0;
	EntradaA[1] = #5000 1'b1;
	EntradaA[1] = #5000 1'b0;
	EntradaA[1] = #5000 1'b1;
	EntradaA[1] = #5000 1'b0;
	EntradaA[1] = #5000 1'b1;
	EntradaA[1] = #15000 1'b0;
	EntradaA[1] = #10000 1'b1;
	EntradaA[1] = #10000 1'b0;
	EntradaA[1] = #20000 1'b1;
	EntradaA[1] = #5000 1'b0;
	EntradaA[1] = #10000 1'b1;
	EntradaA[1] = #5000 1'b0;
	EntradaA[1] = #10000 1'b1;
	EntradaA[1] = #15000 1'b0;
	EntradaA[1] = #5000 1'b1;
	EntradaA[1] = #5000 1'b0;
	EntradaA[1] = #5000 1'b1;
	EntradaA[1] = #5000 1'b0;
	EntradaA[1] = #15000 1'b1;
	EntradaA[1] = #10000 1'b0;
	EntradaA[1] = #5000 1'b1;
	EntradaA[1] = #5000 1'b0;
	EntradaA[1] = #10000 1'b1;
	EntradaA[1] = #15000 1'b0;
	EntradaA[1] = #5000 1'b1;
	EntradaA[1] = #10000 1'b0;
	EntradaA[1] = #5000 1'b1;
	EntradaA[1] = #5000 1'b0;
	EntradaA[1] = #5000 1'b1;
	EntradaA[1] = #5000 1'b0;
	EntradaA[1] = #5000 1'b1;
	EntradaA[1] = #5000 1'b0;
	EntradaA[1] = #5000 1'b1;
	EntradaA[1] = #10000 1'b0;
	EntradaA[1] = #5000 1'b1;
	EntradaA[1] = #5000 1'b0;
	EntradaA[1] = #20000 1'b1;
	EntradaA[1] = #10000 1'b0;
	EntradaA[1] = #20000 1'b1;
	EntradaA[1] = #25000 1'b0;
	EntradaA[1] = #10000 1'b1;
	EntradaA[1] = #15000 1'b0;
	EntradaA[1] = #10000 1'b1;
	EntradaA[1] = #10000 1'b0;
	EntradaA[1] = #5000 1'b1;
	EntradaA[1] = #25000 1'b0;
	EntradaA[1] = #5000 1'b1;
	EntradaA[1] = #5000 1'b0;
	EntradaA[1] = #15000 1'b1;
	EntradaA[1] = #10000 1'b0;
	EntradaA[1] = #5000 1'b1;
	EntradaA[1] = #5000 1'b0;
	EntradaA[1] = #5000 1'b1;
	EntradaA[1] = #5000 1'b0;
	EntradaA[1] = #10000 1'b1;
	EntradaA[1] = #10000 1'b0;
	EntradaA[1] = #15000 1'b1;
	EntradaA[1] = #15000 1'b0;
	EntradaA[1] = #20000 1'b1;
	EntradaA[1] = #5000 1'b0;
	EntradaA[1] = #5000 1'b1;
	EntradaA[1] = #15000 1'b0;
	EntradaA[1] = #5000 1'b1;
	EntradaA[1] = #15000 1'b0;
	EntradaA[1] = #5000 1'b1;
	EntradaA[1] = #5000 1'b0;
	EntradaA[1] = #5000 1'b1;
	EntradaA[1] = #5000 1'b0;
	EntradaA[1] = #5000 1'b1;
	EntradaA[1] = #5000 1'b0;
	EntradaA[1] = #25000 1'b1;
	EntradaA[1] = #15000 1'b0;
	EntradaA[1] = #5000 1'b1;
	EntradaA[1] = #15000 1'b0;
	EntradaA[1] = #10000 1'b1;
	EntradaA[1] = #5000 1'b0;
	EntradaA[1] = #5000 1'b1;
	EntradaA[1] = #5000 1'b0;
	EntradaA[1] = #5000 1'b1;
	EntradaA[1] = #10000 1'b0;
	EntradaA[1] = #5000 1'b1;
	EntradaA[1] = #5000 1'b0;
	EntradaA[1] = #15000 1'b1;
	EntradaA[1] = #20000 1'b0;
	EntradaA[1] = #10000 1'b1;
end 
// EntradaA[ 0 ]
initial
begin
	EntradaA[0] = 1'b0;
	EntradaA[0] = #20000 1'b1;
	EntradaA[0] = #5000 1'b0;
	EntradaA[0] = #10000 1'b1;
	EntradaA[0] = #5000 1'b0;
	EntradaA[0] = #5000 1'b1;
	EntradaA[0] = #5000 1'b0;
	EntradaA[0] = #10000 1'b1;
	EntradaA[0] = #5000 1'b0;
	EntradaA[0] = #5000 1'b1;
	EntradaA[0] = #10000 1'b0;
	EntradaA[0] = #15000 1'b1;
	EntradaA[0] = #15000 1'b0;
	EntradaA[0] = #10000 1'b1;
	EntradaA[0] = #10000 1'b0;
	EntradaA[0] = #10000 1'b1;
	EntradaA[0] = #5000 1'b0;
	EntradaA[0] = #5000 1'b1;
	EntradaA[0] = #5000 1'b0;
	EntradaA[0] = #5000 1'b1;
	EntradaA[0] = #10000 1'b0;
	EntradaA[0] = #15000 1'b1;
	EntradaA[0] = #10000 1'b0;
	EntradaA[0] = #5000 1'b1;
	EntradaA[0] = #25000 1'b0;
	EntradaA[0] = #10000 1'b1;
	EntradaA[0] = #15000 1'b0;
	EntradaA[0] = #15000 1'b1;
	EntradaA[0] = #5000 1'b0;
	EntradaA[0] = #5000 1'b1;
	EntradaA[0] = #20000 1'b0;
	EntradaA[0] = #30000 1'b1;
	EntradaA[0] = #5000 1'b0;
	EntradaA[0] = #5000 1'b1;
	EntradaA[0] = #25000 1'b0;
	EntradaA[0] = #10000 1'b1;
	EntradaA[0] = #5000 1'b0;
	EntradaA[0] = #5000 1'b1;
	EntradaA[0] = #5000 1'b0;
	EntradaA[0] = #30000 1'b1;
	EntradaA[0] = #10000 1'b0;
	EntradaA[0] = #5000 1'b1;
	EntradaA[0] = #5000 1'b0;
	EntradaA[0] = #15000 1'b1;
	EntradaA[0] = #15000 1'b0;
	EntradaA[0] = #5000 1'b1;
	EntradaA[0] = #5000 1'b0;
	EntradaA[0] = #25000 1'b1;
	EntradaA[0] = #5000 1'b0;
	EntradaA[0] = #5000 1'b1;
	EntradaA[0] = #20000 1'b0;
	EntradaA[0] = #5000 1'b1;
	EntradaA[0] = #5000 1'b0;
	EntradaA[0] = #40000 1'b1;
	EntradaA[0] = #25000 1'b0;
	EntradaA[0] = #10000 1'b1;
	EntradaA[0] = #15000 1'b0;
	EntradaA[0] = #15000 1'b1;
	EntradaA[0] = #5000 1'b0;
	EntradaA[0] = #10000 1'b1;
	EntradaA[0] = #5000 1'b0;
	EntradaA[0] = #5000 1'b1;
	EntradaA[0] = #5000 1'b0;
	EntradaA[0] = #5000 1'b1;
	EntradaA[0] = #30000 1'b0;
	EntradaA[0] = #5000 1'b1;
	EntradaA[0] = #5000 1'b0;
	EntradaA[0] = #15000 1'b1;
	EntradaA[0] = #5000 1'b0;
	EntradaA[0] = #5000 1'b1;
	EntradaA[0] = #5000 1'b0;
	EntradaA[0] = #10000 1'b1;
	EntradaA[0] = #5000 1'b0;
	EntradaA[0] = #40000 1'b1;
	EntradaA[0] = #5000 1'b0;
	EntradaA[0] = #5000 1'b1;
	EntradaA[0] = #5000 1'b0;
	EntradaA[0] = #5000 1'b1;
	EntradaA[0] = #10000 1'b0;
	EntradaA[0] = #20000 1'b1;
	EntradaA[0] = #10000 1'b0;
	EntradaA[0] = #10000 1'b1;
	EntradaA[0] = #15000 1'b0;
	EntradaA[0] = #5000 1'b1;
	EntradaA[0] = #10000 1'b0;
	EntradaA[0] = #10000 1'b1;
	EntradaA[0] = #10000 1'b0;
	EntradaA[0] = #10000 1'b1;
	EntradaA[0] = #15000 1'b0;
	EntradaA[0] = #5000 1'b1;
	EntradaA[0] = #15000 1'b0;
	EntradaA[0] = #5000 1'b1;
	EntradaA[0] = #5000 1'b0;
	EntradaA[0] = #5000 1'b1;
end 
// EntradaB[ 4 ]
initial
begin
	EntradaB[4] = 1'b1;
	EntradaB[4] = #15000 1'b0;
	EntradaB[4] = #5000 1'b1;
	EntradaB[4] = #15000 1'b0;
	EntradaB[4] = #10000 1'b1;
	EntradaB[4] = #5000 1'b0;
	EntradaB[4] = #5000 1'b1;
	EntradaB[4] = #5000 1'b0;
	EntradaB[4] = #15000 1'b1;
	EntradaB[4] = #5000 1'b0;
	EntradaB[4] = #5000 1'b1;
	EntradaB[4] = #10000 1'b0;
	EntradaB[4] = #10000 1'b1;
	EntradaB[4] = #20000 1'b0;
	EntradaB[4] = #10000 1'b1;
	EntradaB[4] = #5000 1'b0;
	EntradaB[4] = #5000 1'b1;
	EntradaB[4] = #5000 1'b0;
	EntradaB[4] = #5000 1'b1;
	EntradaB[4] = #5000 1'b0;
	EntradaB[4] = #10000 1'b1;
	EntradaB[4] = #15000 1'b0;
	EntradaB[4] = #5000 1'b1;
	EntradaB[4] = #5000 1'b0;
	EntradaB[4] = #20000 1'b1;
	EntradaB[4] = #5000 1'b0;
	EntradaB[4] = #5000 1'b1;
	EntradaB[4] = #5000 1'b0;
	EntradaB[4] = #15000 1'b1;
	EntradaB[4] = #15000 1'b0;
	EntradaB[4] = #5000 1'b1;
	EntradaB[4] = #65000 1'b0;
	EntradaB[4] = #15000 1'b1;
	EntradaB[4] = #10000 1'b0;
	EntradaB[4] = #5000 1'b1;
	EntradaB[4] = #15000 1'b0;
	EntradaB[4] = #10000 1'b1;
	EntradaB[4] = #5000 1'b0;
	EntradaB[4] = #10000 1'b1;
	EntradaB[4] = #5000 1'b0;
	EntradaB[4] = #5000 1'b1;
	EntradaB[4] = #10000 1'b0;
	EntradaB[4] = #15000 1'b1;
	EntradaB[4] = #10000 1'b0;
	EntradaB[4] = #20000 1'b1;
	EntradaB[4] = #5000 1'b0;
	EntradaB[4] = #15000 1'b1;
	EntradaB[4] = #10000 1'b0;
	EntradaB[4] = #15000 1'b1;
	EntradaB[4] = #15000 1'b0;
	EntradaB[4] = #10000 1'b1;
	EntradaB[4] = #15000 1'b0;
	EntradaB[4] = #15000 1'b1;
	EntradaB[4] = #20000 1'b0;
	EntradaB[4] = #20000 1'b1;
	EntradaB[4] = #10000 1'b0;
	EntradaB[4] = #10000 1'b1;
	EntradaB[4] = #15000 1'b0;
	EntradaB[4] = #5000 1'b1;
	EntradaB[4] = #5000 1'b0;
	EntradaB[4] = #5000 1'b1;
	EntradaB[4] = #10000 1'b0;
	EntradaB[4] = #5000 1'b1;
	EntradaB[4] = #5000 1'b0;
	EntradaB[4] = #5000 1'b1;
	EntradaB[4] = #30000 1'b0;
	EntradaB[4] = #40000 1'b1;
	EntradaB[4] = #10000 1'b0;
	EntradaB[4] = #30000 1'b1;
	EntradaB[4] = #10000 1'b0;
	EntradaB[4] = #5000 1'b1;
	EntradaB[4] = #5000 1'b0;
	EntradaB[4] = #15000 1'b1;
	EntradaB[4] = #15000 1'b0;
	EntradaB[4] = #30000 1'b1;
	EntradaB[4] = #35000 1'b0;
	EntradaB[4] = #10000 1'b1;
	EntradaB[4] = #5000 1'b0;
	EntradaB[4] = #10000 1'b1;
	EntradaB[4] = #10000 1'b0;
	EntradaB[4] = #15000 1'b1;
	EntradaB[4] = #20000 1'b0;
	EntradaB[4] = #10000 1'b1;
end 
// EntradaB[ 3 ]
initial
begin
	EntradaB[3] = 1'b1;
	EntradaB[3] = #5000 1'b0;
	EntradaB[3] = #10000 1'b1;
	EntradaB[3] = #5000 1'b0;
	EntradaB[3] = #5000 1'b1;
	EntradaB[3] = #5000 1'b0;
	EntradaB[3] = #10000 1'b1;
	EntradaB[3] = #5000 1'b0;
	EntradaB[3] = #5000 1'b1;
	EntradaB[3] = #5000 1'b0;
	EntradaB[3] = #5000 1'b1;
	EntradaB[3] = #10000 1'b0;
	EntradaB[3] = #5000 1'b1;
	EntradaB[3] = #20000 1'b0;
	EntradaB[3] = #10000 1'b1;
	EntradaB[3] = #5000 1'b0;
	EntradaB[3] = #5000 1'b1;
	EntradaB[3] = #20000 1'b0;
	EntradaB[3] = #15000 1'b1;
	EntradaB[3] = #5000 1'b0;
	EntradaB[3] = #10000 1'b1;
	EntradaB[3] = #20000 1'b0;
	EntradaB[3] = #15000 1'b1;
	EntradaB[3] = #5000 1'b0;
	EntradaB[3] = #10000 1'b1;
	EntradaB[3] = #10000 1'b0;
	EntradaB[3] = #5000 1'b1;
	EntradaB[3] = #5000 1'b0;
	EntradaB[3] = #10000 1'b1;
	EntradaB[3] = #10000 1'b0;
	EntradaB[3] = #5000 1'b1;
	EntradaB[3] = #10000 1'b0;
	EntradaB[3] = #20000 1'b1;
	EntradaB[3] = #10000 1'b0;
	EntradaB[3] = #15000 1'b1;
	EntradaB[3] = #40000 1'b0;
	EntradaB[3] = #10000 1'b1;
	EntradaB[3] = #5000 1'b0;
	EntradaB[3] = #5000 1'b1;
	EntradaB[3] = #10000 1'b0;
	EntradaB[3] = #5000 1'b1;
	EntradaB[3] = #15000 1'b0;
	EntradaB[3] = #5000 1'b1;
	EntradaB[3] = #10000 1'b0;
	EntradaB[3] = #10000 1'b1;
	EntradaB[3] = #5000 1'b0;
	EntradaB[3] = #5000 1'b1;
	EntradaB[3] = #5000 1'b0;
	EntradaB[3] = #20000 1'b1;
	EntradaB[3] = #10000 1'b0;
	EntradaB[3] = #5000 1'b1;
	EntradaB[3] = #5000 1'b0;
	EntradaB[3] = #5000 1'b1;
	EntradaB[3] = #10000 1'b0;
	EntradaB[3] = #10000 1'b1;
	EntradaB[3] = #10000 1'b0;
	EntradaB[3] = #10000 1'b1;
	EntradaB[3] = #5000 1'b0;
	EntradaB[3] = #35000 1'b1;
	EntradaB[3] = #5000 1'b0;
	EntradaB[3] = #15000 1'b1;
	EntradaB[3] = #5000 1'b0;
	EntradaB[3] = #5000 1'b1;
	EntradaB[3] = #5000 1'b0;
	EntradaB[3] = #15000 1'b1;
	EntradaB[3] = #15000 1'b0;
	EntradaB[3] = #5000 1'b1;
	EntradaB[3] = #5000 1'b0;
	EntradaB[3] = #10000 1'b1;
	EntradaB[3] = #5000 1'b0;
	EntradaB[3] = #5000 1'b1;
	EntradaB[3] = #10000 1'b0;
	EntradaB[3] = #10000 1'b1;
	EntradaB[3] = #5000 1'b0;
	EntradaB[3] = #5000 1'b1;
	EntradaB[3] = #10000 1'b0;
	EntradaB[3] = #5000 1'b1;
	EntradaB[3] = #5000 1'b0;
	EntradaB[3] = #5000 1'b1;
	EntradaB[3] = #20000 1'b0;
	EntradaB[3] = #5000 1'b1;
	EntradaB[3] = #5000 1'b0;
	EntradaB[3] = #15000 1'b1;
	EntradaB[3] = #10000 1'b0;
	EntradaB[3] = #30000 1'b1;
	EntradaB[3] = #5000 1'b0;
	EntradaB[3] = #5000 1'b1;
	EntradaB[3] = #15000 1'b0;
	EntradaB[3] = #10000 1'b1;
	EntradaB[3] = #10000 1'b0;
	EntradaB[3] = #5000 1'b1;
	EntradaB[3] = #5000 1'b0;
	EntradaB[3] = #5000 1'b1;
	EntradaB[3] = #5000 1'b0;
	EntradaB[3] = #5000 1'b1;
	EntradaB[3] = #5000 1'b0;
	EntradaB[3] = #5000 1'b1;
	EntradaB[3] = #5000 1'b0;
	EntradaB[3] = #15000 1'b1;
	EntradaB[3] = #5000 1'b0;
	EntradaB[3] = #5000 1'b1;
	EntradaB[3] = #15000 1'b0;
	EntradaB[3] = #5000 1'b1;
	EntradaB[3] = #5000 1'b0;
	EntradaB[3] = #10000 1'b1;
	EntradaB[3] = #5000 1'b0;
	EntradaB[3] = #10000 1'b1;
	EntradaB[3] = #15000 1'b0;
	EntradaB[3] = #5000 1'b1;
	EntradaB[3] = #10000 1'b0;
end 
// EntradaB[ 2 ]
initial
begin
	EntradaB[2] = 1'b0;
	EntradaB[2] = #5000 1'b1;
	EntradaB[2] = #5000 1'b0;
	EntradaB[2] = #5000 1'b1;
	EntradaB[2] = #5000 1'b0;
	EntradaB[2] = #10000 1'b1;
	EntradaB[2] = #5000 1'b0;
	EntradaB[2] = #5000 1'b1;
	EntradaB[2] = #10000 1'b0;
	EntradaB[2] = #15000 1'b1;
	EntradaB[2] = #10000 1'b0;
	EntradaB[2] = #5000 1'b1;
	EntradaB[2] = #5000 1'b0;
	EntradaB[2] = #5000 1'b1;
	EntradaB[2] = #15000 1'b0;
	EntradaB[2] = #10000 1'b1;
	EntradaB[2] = #5000 1'b0;
	EntradaB[2] = #5000 1'b1;
	EntradaB[2] = #5000 1'b0;
	EntradaB[2] = #15000 1'b1;
	EntradaB[2] = #5000 1'b0;
	EntradaB[2] = #10000 1'b1;
	EntradaB[2] = #5000 1'b0;
	EntradaB[2] = #20000 1'b1;
	EntradaB[2] = #20000 1'b0;
	EntradaB[2] = #5000 1'b1;
	EntradaB[2] = #20000 1'b0;
	EntradaB[2] = #5000 1'b1;
	EntradaB[2] = #5000 1'b0;
	EntradaB[2] = #15000 1'b1;
	EntradaB[2] = #5000 1'b0;
	EntradaB[2] = #10000 1'b1;
	EntradaB[2] = #25000 1'b0;
	EntradaB[2] = #15000 1'b1;
	EntradaB[2] = #10000 1'b0;
	EntradaB[2] = #5000 1'b1;
	EntradaB[2] = #15000 1'b0;
	EntradaB[2] = #5000 1'b1;
	EntradaB[2] = #10000 1'b0;
	EntradaB[2] = #5000 1'b1;
	EntradaB[2] = #5000 1'b0;
	EntradaB[2] = #10000 1'b1;
	EntradaB[2] = #5000 1'b0;
	EntradaB[2] = #15000 1'b1;
	EntradaB[2] = #20000 1'b0;
	EntradaB[2] = #10000 1'b1;
	EntradaB[2] = #25000 1'b0;
	EntradaB[2] = #35000 1'b1;
	EntradaB[2] = #15000 1'b0;
	EntradaB[2] = #10000 1'b1;
	EntradaB[2] = #10000 1'b0;
	EntradaB[2] = #20000 1'b1;
	EntradaB[2] = #15000 1'b0;
	EntradaB[2] = #5000 1'b1;
	EntradaB[2] = #25000 1'b0;
	EntradaB[2] = #10000 1'b1;
	EntradaB[2] = #5000 1'b0;
	EntradaB[2] = #10000 1'b1;
	EntradaB[2] = #5000 1'b0;
	EntradaB[2] = #10000 1'b1;
	EntradaB[2] = #10000 1'b0;
	EntradaB[2] = #10000 1'b1;
	EntradaB[2] = #5000 1'b0;
	EntradaB[2] = #10000 1'b1;
	EntradaB[2] = #5000 1'b0;
	EntradaB[2] = #5000 1'b1;
	EntradaB[2] = #10000 1'b0;
	EntradaB[2] = #10000 1'b1;
	EntradaB[2] = #15000 1'b0;
	EntradaB[2] = #5000 1'b1;
	EntradaB[2] = #10000 1'b0;
	EntradaB[2] = #10000 1'b1;
	EntradaB[2] = #10000 1'b0;
	EntradaB[2] = #20000 1'b1;
	EntradaB[2] = #15000 1'b0;
	EntradaB[2] = #5000 1'b1;
	EntradaB[2] = #10000 1'b0;
	EntradaB[2] = #10000 1'b1;
	EntradaB[2] = #20000 1'b0;
	EntradaB[2] = #5000 1'b1;
	EntradaB[2] = #5000 1'b0;
	EntradaB[2] = #10000 1'b1;
	EntradaB[2] = #5000 1'b0;
	EntradaB[2] = #5000 1'b1;
	EntradaB[2] = #5000 1'b0;
	EntradaB[2] = #5000 1'b1;
	EntradaB[2] = #10000 1'b0;
	EntradaB[2] = #10000 1'b1;
	EntradaB[2] = #25000 1'b0;
	EntradaB[2] = #5000 1'b1;
	EntradaB[2] = #30000 1'b0;
	EntradaB[2] = #5000 1'b1;
	EntradaB[2] = #10000 1'b0;
	EntradaB[2] = #5000 1'b1;
	EntradaB[2] = #10000 1'b0;
	EntradaB[2] = #5000 1'b1;
	EntradaB[2] = #5000 1'b0;
	EntradaB[2] = #5000 1'b1;
	EntradaB[2] = #5000 1'b0;
end 
// EntradaB[ 1 ]
initial
begin
	EntradaB[1] = 1'b0;
	EntradaB[1] = #10000 1'b1;
	EntradaB[1] = #5000 1'b0;
	EntradaB[1] = #5000 1'b1;
	EntradaB[1] = #15000 1'b0;
	EntradaB[1] = #5000 1'b1;
	EntradaB[1] = #5000 1'b0;
	EntradaB[1] = #5000 1'b1;
	EntradaB[1] = #5000 1'b0;
	EntradaB[1] = #20000 1'b1;
	EntradaB[1] = #20000 1'b0;
	EntradaB[1] = #10000 1'b1;
	EntradaB[1] = #5000 1'b0;
	EntradaB[1] = #5000 1'b1;
	EntradaB[1] = #10000 1'b0;
	EntradaB[1] = #5000 1'b1;
	EntradaB[1] = #10000 1'b0;
	EntradaB[1] = #5000 1'b1;
	EntradaB[1] = #15000 1'b0;
	EntradaB[1] = #5000 1'b1;
	EntradaB[1] = #15000 1'b0;
	EntradaB[1] = #5000 1'b1;
	EntradaB[1] = #10000 1'b0;
	EntradaB[1] = #10000 1'b1;
	EntradaB[1] = #10000 1'b0;
	EntradaB[1] = #10000 1'b1;
	EntradaB[1] = #5000 1'b0;
	EntradaB[1] = #5000 1'b1;
	EntradaB[1] = #5000 1'b0;
	EntradaB[1] = #5000 1'b1;
	EntradaB[1] = #15000 1'b0;
	EntradaB[1] = #10000 1'b1;
	EntradaB[1] = #15000 1'b0;
	EntradaB[1] = #20000 1'b1;
	EntradaB[1] = #10000 1'b0;
	EntradaB[1] = #10000 1'b1;
	EntradaB[1] = #10000 1'b0;
	EntradaB[1] = #5000 1'b1;
	EntradaB[1] = #10000 1'b0;
	EntradaB[1] = #5000 1'b1;
	EntradaB[1] = #5000 1'b0;
	EntradaB[1] = #20000 1'b1;
	EntradaB[1] = #20000 1'b0;
	EntradaB[1] = #5000 1'b1;
	EntradaB[1] = #10000 1'b0;
	EntradaB[1] = #20000 1'b1;
	EntradaB[1] = #5000 1'b0;
	EntradaB[1] = #15000 1'b1;
	EntradaB[1] = #5000 1'b0;
	EntradaB[1] = #10000 1'b1;
	EntradaB[1] = #5000 1'b0;
	EntradaB[1] = #10000 1'b1;
	EntradaB[1] = #10000 1'b0;
	EntradaB[1] = #30000 1'b1;
	EntradaB[1] = #5000 1'b0;
	EntradaB[1] = #5000 1'b1;
	EntradaB[1] = #20000 1'b0;
	EntradaB[1] = #5000 1'b1;
	EntradaB[1] = #5000 1'b0;
	EntradaB[1] = #25000 1'b1;
	EntradaB[1] = #20000 1'b0;
	EntradaB[1] = #5000 1'b1;
	EntradaB[1] = #15000 1'b0;
	EntradaB[1] = #30000 1'b1;
	EntradaB[1] = #5000 1'b0;
	EntradaB[1] = #5000 1'b1;
	EntradaB[1] = #15000 1'b0;
	EntradaB[1] = #5000 1'b1;
	EntradaB[1] = #5000 1'b0;
	EntradaB[1] = #10000 1'b1;
	EntradaB[1] = #5000 1'b0;
	EntradaB[1] = #25000 1'b1;
	EntradaB[1] = #10000 1'b0;
	EntradaB[1] = #20000 1'b1;
	EntradaB[1] = #5000 1'b0;
	EntradaB[1] = #25000 1'b1;
	EntradaB[1] = #5000 1'b0;
	EntradaB[1] = #10000 1'b1;
	EntradaB[1] = #20000 1'b0;
	EntradaB[1] = #5000 1'b1;
	EntradaB[1] = #5000 1'b0;
	EntradaB[1] = #5000 1'b1;
	EntradaB[1] = #5000 1'b0;
	EntradaB[1] = #10000 1'b1;
	EntradaB[1] = #5000 1'b0;
	EntradaB[1] = #5000 1'b1;
	EntradaB[1] = #5000 1'b0;
	EntradaB[1] = #15000 1'b1;
	EntradaB[1] = #5000 1'b0;
	EntradaB[1] = #20000 1'b1;
	EntradaB[1] = #5000 1'b0;
	EntradaB[1] = #5000 1'b1;
	EntradaB[1] = #5000 1'b0;
	EntradaB[1] = #5000 1'b1;
	EntradaB[1] = #25000 1'b0;
	EntradaB[1] = #20000 1'b1;
	EntradaB[1] = #15000 1'b0;
end 
// EntradaB[ 0 ]
initial
begin
	EntradaB[0] = 1'b0;
	EntradaB[0] = #20000 1'b1;
	EntradaB[0] = #5000 1'b0;
	EntradaB[0] = #5000 1'b1;
	EntradaB[0] = #5000 1'b0;
	EntradaB[0] = #5000 1'b1;
	EntradaB[0] = #10000 1'b0;
	EntradaB[0] = #10000 1'b1;
	EntradaB[0] = #5000 1'b0;
	EntradaB[0] = #10000 1'b1;
	EntradaB[0] = #15000 1'b0;
	EntradaB[0] = #10000 1'b1;
	EntradaB[0] = #5000 1'b0;
	EntradaB[0] = #5000 1'b1;
	EntradaB[0] = #5000 1'b0;
	EntradaB[0] = #10000 1'b1;
	EntradaB[0] = #15000 1'b0;
	EntradaB[0] = #15000 1'b1;
	EntradaB[0] = #10000 1'b0;
	EntradaB[0] = #5000 1'b1;
	EntradaB[0] = #10000 1'b0;
	EntradaB[0] = #10000 1'b1;
	EntradaB[0] = #10000 1'b0;
	EntradaB[0] = #10000 1'b1;
	EntradaB[0] = #5000 1'b0;
	EntradaB[0] = #5000 1'b1;
	EntradaB[0] = #5000 1'b0;
	EntradaB[0] = #10000 1'b1;
	EntradaB[0] = #5000 1'b0;
	EntradaB[0] = #10000 1'b1;
	EntradaB[0] = #30000 1'b0;
	EntradaB[0] = #15000 1'b1;
	EntradaB[0] = #5000 1'b0;
	EntradaB[0] = #5000 1'b1;
	EntradaB[0] = #5000 1'b0;
	EntradaB[0] = #10000 1'b1;
	EntradaB[0] = #15000 1'b0;
	EntradaB[0] = #35000 1'b1;
	EntradaB[0] = #10000 1'b0;
	EntradaB[0] = #5000 1'b1;
	EntradaB[0] = #5000 1'b0;
	EntradaB[0] = #5000 1'b1;
	EntradaB[0] = #5000 1'b0;
	EntradaB[0] = #15000 1'b1;
	EntradaB[0] = #20000 1'b0;
	EntradaB[0] = #35000 1'b1;
	EntradaB[0] = #5000 1'b0;
	EntradaB[0] = #5000 1'b1;
	EntradaB[0] = #15000 1'b0;
	EntradaB[0] = #5000 1'b1;
	EntradaB[0] = #35000 1'b0;
	EntradaB[0] = #5000 1'b1;
	EntradaB[0] = #15000 1'b0;
	EntradaB[0] = #5000 1'b1;
	EntradaB[0] = #5000 1'b0;
	EntradaB[0] = #5000 1'b1;
	EntradaB[0] = #15000 1'b0;
	EntradaB[0] = #5000 1'b1;
	EntradaB[0] = #5000 1'b0;
	EntradaB[0] = #10000 1'b1;
	EntradaB[0] = #5000 1'b0;
	EntradaB[0] = #10000 1'b1;
	EntradaB[0] = #5000 1'b0;
	EntradaB[0] = #25000 1'b1;
	EntradaB[0] = #10000 1'b0;
	EntradaB[0] = #5000 1'b1;
	EntradaB[0] = #20000 1'b0;
	EntradaB[0] = #15000 1'b1;
	EntradaB[0] = #15000 1'b0;
	EntradaB[0] = #10000 1'b1;
	EntradaB[0] = #5000 1'b0;
	EntradaB[0] = #50000 1'b1;
	EntradaB[0] = #10000 1'b0;
	EntradaB[0] = #20000 1'b1;
	EntradaB[0] = #5000 1'b0;
	EntradaB[0] = #5000 1'b1;
	EntradaB[0] = #15000 1'b0;
	EntradaB[0] = #5000 1'b1;
	EntradaB[0] = #10000 1'b0;
	EntradaB[0] = #5000 1'b1;
	EntradaB[0] = #5000 1'b0;
	EntradaB[0] = #5000 1'b1;
	EntradaB[0] = #5000 1'b0;
	EntradaB[0] = #5000 1'b1;
	EntradaB[0] = #5000 1'b0;
	EntradaB[0] = #10000 1'b1;
	EntradaB[0] = #15000 1'b0;
	EntradaB[0] = #5000 1'b1;
	EntradaB[0] = #10000 1'b0;
	EntradaB[0] = #5000 1'b1;
	EntradaB[0] = #5000 1'b0;
	EntradaB[0] = #5000 1'b1;
	EntradaB[0] = #10000 1'b0;
	EntradaB[0] = #10000 1'b1;
	EntradaB[0] = #5000 1'b0;
	EntradaB[0] = #5000 1'b1;
	EntradaB[0] = #10000 1'b0;
	EntradaB[0] = #10000 1'b1;
	EntradaB[0] = #5000 1'b0;
	EntradaB[0] = #5000 1'b1;
end 
endmodule

